-- lynkUI (v1.0) - Modernized, GitHub-ready UI library
-- Author: Generated by ChatGPT for user
-- Inspired by the layout and styling of newstarhook.lua (uploaded). UI assets/IDs kept configurable.
-- Features: draggable window, left-side tabs, four default tabs (Home, Updates, Credits, Settings),
-- search bar + script hub, colour theme, keybind picker (default RightCtrl), close X, config save/load.
-- Save as `source.lua` and publish to your repo. Customize icons/logos and script list in calling code.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
    error("lynkUI: LocalPlayer not found - run as a LocalScript / exploit local")
end

-- Utilities
local function new(class, props)
    local inst = Instance.new(class)
    if type(props) == "table" then
        for k,v in pairs(props) do
            -- keep protected properties minimal
            pcall(function() inst[k] = v end)
        end
    end
    return inst
end

local function writeOK(path, data)
    if type(writefile) == "function" and type(readfile) == "function" then
        pcall(writefile, path, data)
        return true
    end
    return false
end

local function readOK(path)
    if type(readfile) == "function" then
        local ok, d = pcall(readfile, path)
        if ok then return d end
    end
    return nil
end

-- Default style (matches newstarhook accent)
local STYLE = {
    WindowSize = UDim2.new(0, 760, 0, 480),
    Background = Color3.fromRGB(13,13,13),
    Panel = Color3.fromRGB(16,16,16),
    Accent = Color3.fromRGB(207,227,0), -- same default accent as the example UI
    Text = Color3.fromRGB(235,235,235),
    SubText = Color3.fromRGB(170,170,170),
    Corner = UDim.new(0,8),
    Tween = TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
}

local Lynk = {}
Lynk.__index = Lynk

function Lynk:CreateWindow(opts)
    opts = opts or {}
    local Window = {}
    Window._tabs = {}
    Window._flags = {}
    Window._config = {
        Enabled = opts.ConfigurationSaving and opts.ConfigurationSaving.Enabled or false,
        FileName = (opts.ConfigurationSaving and opts.ConfigurationSaving.FileName) or "lynkUI_Config",
        FolderName = (opts.ConfigurationSaving and opts.ConfigurationSaving.FolderName) or nil,
    }
    Window._accent = opts.Accent or STYLE.Accent
    Window._logo = opts.Logo or "http://www.roblox.com/asset/?id=17673929618" -- configurable default
    Window._title = opts.Title or (opts.Name or "lynkUI")
    Window._subtitle = opts.Subtitle or "by @x_vvw & @l_ynk"
    Window._uiKey = (opts.DefaultKeybind and opts.DefaultKeybind ~= "" ) and opts.DefaultKeybind or Enum.KeyCode.RightControl -- default RightCtrl

    -- ScreenGui
    local screen = Instance.new("ScreenGui")
    screen.Name = opts.Name or "lynkUI"
    screen.ResetOnSpawn = false
    screen.DisplayOrder = 1000
    screen.Parent = LocalPlayer:WaitForChild("PlayerGui")
    Window._screen = screen

    -- Outline frame (centered)
    local Outline = new("Frame", {
        Name = "Outline",
        AnchorPoint = Vector2.new(0.5,0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(0, 0, 0, 40), -- tween to final size
        BackgroundColor3 = STYLE.Panel,
        BorderSizePixel = 0,
    })
    Outline.Parent = screen
    local outlineCorner = new("UICorner") outlineCorner.CornerRadius = STYLE.Corner outlineCorner.Parent = Outline
    local outlineStroke = new("UIStroke") outlineStroke.Thickness = 1 outlineStroke.Parent = Outline outlineStroke.Color = Color3.fromRGB(30,30,30)

    -- Inline and holder
    local Inline = new("Frame", {Name = "Inline", Position = UDim2.new(0,1,0,1), Size = UDim2.new(1,-2,1,-2), BackgroundColor3 = STYLE.Background, BorderSizePixel = 0})
    Inline.Parent = Outline
    local inlineCorner = new("UICorner") inlineCorner.CornerRadius = STYLE.Corner inlineCorner.Parent = Inline

    local Holder = new("Frame", {Name = "Holder", Position = UDim2.new(0,150,0,0), Size = UDim2.new(1,-150,1,0), BackgroundColor3 = STYLE.Panel, BorderSizePixel = 0})
    Holder.Parent = Inline
    local holderCorner = new("UICorner") holderCorner.CornerRadius = STYLE.Corner holderCorner.Parent = Holder

    -- Left tabs
    local Tabs = new("Frame", {Name = "Tabs", Position = UDim2.new(0,8,0,12), Size = UDim2.new(0,140,1,-24), BackgroundTransparency = 1})
    Tabs.Parent = Inline
    local tabsLayout = new("UIListLayout") tabsLayout.Parent = Tabs tabsLayout.Padding = UDim.new(0,8) tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Left decorative logo (top-left inside Holder)
    local Logo = new("ImageLabel", {Name = "Logo", Image = Window._logo, Position = UDim2.new(0,10,0,-18), Size = UDim2.fromOffset(96,96), BackgroundTransparency = 1, ScaleType = Enum.ScaleType.Fit})
    Logo.Parent = Holder

    -- Top gutter (title and close)
    local TopBar = new("Frame", {Name = "TopBar", Size = UDim2.new(1,-160,0,56), Position = UDim2.new(0,160,0,8), BackgroundTransparency = 1})
    TopBar.Parent = Inline

    local Title = new("TextLabel", {Name = "Title", Position = UDim2.new(0,0,0,2), Size = UDim2.new(1,0,0,22), BackgroundTransparency = 1, Text = Window._title, Font = Enum.Font.GothamSemibold, TextSize = 20, TextColor3 = STYLE.Text, TextXAlignment = Enum.TextXAlignment.Left})
    Title.Parent = TopBar

    local Sub = new("TextLabel", {Name = "Sub", Position = UDim2.new(0,0,0,24), Size = UDim2.new(1,0,0,18), BackgroundTransparency = 1, Text = Window._subtitle, Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = STYLE.SubText, TextXAlignment = Enum.TextXAlignment.Left})
    Sub.Parent = TopBar

    -- Close X
    local CloseX = new("TextButton", {Name = "CloseX", Size = UDim2.new(0,36,0,28), Position = UDim2.new(1,-44,0,14), BackgroundColor3 = STYLE.Accent, Text = "X", Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Color3.new(1,1,1)})
    CloseX.Parent = TopBar
    local cxcorner = new("UICorner") cxcorner.CornerRadius = UDim.new(0,6) cxcorner.Parent = CloseX

    CloseX.MouseButton1Click:Connect(function()
        if screen and screen.Parent then screen:Destroy() end
    end)

    -- Content area inside Holder
    local Content = new("Frame", {Name = "Content", Size = UDim2.new(1,-24,1,-84), Position = UDim2.new(0,12,0,72), BackgroundTransparency = 1})
    Content.Parent = Holder

    -- Search bar (top of content)
    local SearchParent = new("Frame", {Name = "SearchParent", Size = UDim2.new(1,0,0,40), BackgroundTransparency = 1})
    SearchParent.Parent = Content

    local SearchBox = new("TextBox", {Name = "SearchBox", Size = UDim2.new(1,0,0,40), BackgroundColor3 = Color3.fromRGB(28,28,28), PlaceholderText = "Search scripts, games, commands...", Text = "", Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = STYLE.Text})
    SearchBox.Parent = SearchParent
    local sbCorner = new("UICorner") sbCorner.CornerRadius = UDim.new(0,8) sbCorner.Parent = SearchBox
    local sbPadding = new("UIPadding") sbPadding.Parent = SearchBox sbPadding.PaddingLeft = UDim.new(0,10)

    -- Tabs content holder (where each page's frame will be created)
    local PagesHolder = new("Frame", {Name = "PagesHolder", Size = UDim2.new(1,0,1,-56), Position = UDim2.new(0,0,0,48), BackgroundTransparency = 1})
    PagesHolder.Parent = Content

    -- Keep references
    Window._screen = screen
    Window._outline = Outline
    Window._inline = Inline
    Window._holder = Holder
    Window._tabsFrame = Tabs
    Window._pagesHolder = PagesHolder
    Window._search = SearchBox
    Window._titleLabel = Title
    Window._close = CloseX
    Window._logoImage = Logo

    -- Dragging implementation (top bar overlay)
    local Dragger = new("TextButton", {Name = "Dragger", BackgroundTransparency = 1, Size = UDim2.new(1,0,0,56), Position = UDim2.new(0,160,0,8), Text = ""})
    Dragger.Parent = Inline

    local dragging = false
    local offset = Vector2.new(0,0)

    Dragger.MouseButton1Down:Connect(function()
        dragging = true
        local mouseLoc = UserInputService:GetMouseLocation()
        local outlinePos = Outline.AbsolutePosition
        offset = Vector2.new(mouseLoc.X - outlinePos.X, mouseLoc.Y - outlinePos.Y)
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseLoc = UserInputService:GetMouseLocation()
            local newPos = UDim2.new(0, mouseLoc.X - offset.X + (Outline.Size.X.Offset * Outline.AnchorPoint.X), 0, mouseLoc.Y - offset.Y + (Outline.Size.Y.Offset * Outline.AnchorPoint.Y))
            TweenService:Create(Outline, TweenInfo.new(0.07, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = newPos}):Play()
        end
    end)

    -- Toggle open/close by key
    local openState = true
    local function setOpen(bool)
        openState = bool
        if openState then
            Outline.Visible = true
            TweenService:Create(Outline, STYLE.Tween, {Size = STYLE.WindowSize}):Play()
        else
            TweenService:Create(Outline, STYLE.Tween, {Size = UDim2.new(0,0,0,20)}):Play()
            task.wait(0.2)
            Outline.Visible = false
        end
    end
    setOpen(true)

    UserInputService.InputBegan:Connect(function(inp, g)
        if g then return end
        if inp.KeyCode == Window._uiKey then
            setOpen(not openState)
        end
    end)

    -- Tabs API
    function Window:CreateTab(name, icon)
        local tab = {Name = name, Sections = {}, Open = false}

        local btn = new("TextButton", {Name = name.."_btn", Size = UDim2.new(1,0,0,32), BackgroundTransparency = 1, Text = "", AutoButtonColor = false})
        btn.Parent = Tabs
        local accent = new("Frame", {Parent = btn, Position = UDim2.new(0,-8,0,6), Size = UDim2.new(0,8,1,-12), BackgroundColor3 = Window._accent, BorderSizePixel = 0})
        local tTitle = new("TextLabel", {Parent = btn, Position = UDim2.new(0,40,0,0), Size = UDim2.new(1,-40,1,0), BackgroundTransparency = 1, Text = name, Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = STYLE.SubText, TextXAlignment = Enum.TextXAlignment.Left})
        local tIcon = new("ImageLabel", {Parent = btn, Position = UDim2.new(0,12,0,8), Size = UDim2.new(0,16,0,16), Image = icon or "", BackgroundTransparency = 1})
        local corner = new("UICorner") corner.CornerRadius = UDim.new(0,6) corner.Parent = btn

        local page = new("Frame", {Name = name.."_page", Size = UDim2.new(1,0,1,0), Position = UDim2.new(0,0,0,0), BackgroundTransparency = 1, Visible = false})
        page.Parent = PagesHolder

        local left = new("Frame", {Parent = page, Position = UDim2.new(0,0,0,0), Size = UDim2.new(0.5,-6,1,0), BackgroundTransparency = 1})
        local right = new("Frame", {Parent = page, Position = UDim2.new(0.5,6,0,0), Size = UDim2.new(0.5,-6,1,0), BackgroundTransparency = 1})
        local leftLayout = new("UIListLayout") leftLayout.Parent = left leftLayout.Padding = UDim.new(0,8)
        local rightLayout = new("UIListLayout") rightLayout.Parent = right rightLayout.Padding = UDim.new(0,8)

        function tab:CreateSection(title, side)
            side = (side or "left"):lower()
            local section = new("Frame", {Parent = (side == "left") and left or right, Size = UDim2.new(1,0,0,32 + 8), BackgroundTransparency = 1})
            local header = new("TextLabel", {Parent = section, Position = UDim2.new(0,0,0,0), Size = UDim2.new(1,0,0,20), BackgroundTransparency = 1, Text = title, Font = Enum.Font.GothamSemibold, TextSize = 14, TextColor3 = STYLE.Text, TextXAlignment = Enum.TextXAlignment.Left})
            local content = new("Frame", {Parent = section, Position = UDim2.new(0,0,0,24), Size = UDim2.new(1,0,0,0), BackgroundTransparency = 1})
            local contentLayout = new("UIListLayout") contentLayout.Parent = content contentLayout.Padding = UDim.new(0,6)
            section.AutomaticSize = Enum.AutomaticSize.Y
            return setmetatable({Frame = section, Content = content, Add = function(self, child) child.Parent = content end}, {__index = function() end})
        end

        function tab:Show()
            for _, t in ipairs(self._owner and self._owner._tabs or Window._tabs) do
                if t.page then t.page.Visible = false end
            end
            page.Visible = true
            -- update button styles
            for _, child in ipairs(Tabs:GetChildren()) do
                if child:IsA("TextButton") then
                    child.BackgroundTransparency = 1
                    for _, c in ipairs(child:GetChildren()) do if c:IsA('TextLabel') then c.TextColor3 = STYLE.SubText end end
                end
            end
            btn.BackgroundTransparency = 0
            tTitle.TextColor3 = STYLE.Text
        end

        btn.MouseButton1Click:Connect(function()
            tab:Show()
        end)

        tab.page = page
        tab.button = btn
        Window._tabs[#Window._tabs+1] = tab
        tab._owner = Window

        -- auto-open first
        if #Window._tabs == 1 then tab:Show() end
        return tab
    end

    -- Element creators (examples simplified): Button, Toggle, Slider, Dropdown, Input, Keybind, Label, Paragraph, ColorPicker
    function Window:CreateButton(tab, opts)
        opts = opts or {}
        local frame = new("Frame", {Size = UDim2.new(1,0,0,36), BackgroundTransparency = 1})
        local btn = new("TextButton", {Parent = frame, Size = UDim2.new(1,0,0,36), BackgroundColor3 = Color3.fromRGB(34,34,34), Text = opts.Name or "Button", Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = STYLE.Text})
        local corner = new("UICorner") corner.CornerRadius = UDim.new(0,6) corner.Parent = btn
        btn.AutoButtonColor = true
        btn.MouseButton1Click:Connect(function()
            pcall(function() if opts.Callback then opts.Callback() end end)
        end)
        btn.Parent = frame
        frame.Parent = tab and tab.page and tab.page.Left or PagesHolder
        return {Set = function(txt) if txt then btn.Text = txt end end, Destroy = function() frame:Destroy() end}
    end

    function Window:CreateLabel(tab, text)
        local f = new('Frame',{Size=UDim2.new(1,0,0,24),BackgroundTransparency=1})
        local l = new('TextLabel',{Parent=f, Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, Text=text or '', Font=Enum.Font.Gotham, TextSize=13, TextColor3=STYLE.Text, TextXAlignment=Enum.TextXAlignment.Left})
        f.Parent = tab and tab.page and tab.page.Left or PagesHolder
        return {Set=function(v) l.Text = v end, Destroy=function() f:Destroy() end}
    end

    -- Keybind picker helper (small, but reliable)
    function Window:CreateKeybind(tab, opts)
        opts = opts or {}
        local frame = new('Frame',{Size=UDim2.new(1,0,0,36), BackgroundTransparency=1})
        local label = new('TextLabel',{Parent=frame, Size=UDim2.new(0.6,0,1,0), BackgroundTransparency=1, Text=opts.Name or 'Keybind', Font=Enum.Font.Gotham, TextSize=14, TextColor3=STYLE.Text, TextXAlignment=Enum.TextXAlignment.Left})
        local btn = new('TextButton',{Parent=frame, Size=UDim2.new(0.4,-8,1,0), Position=UDim2.new(0.6,8,0,0), BackgroundColor3=Color3.fromRGB(38,38,38), Text=opts.CurrentKeybind or "None", Font=Enum.Font.GothamBold, TextSize=14, TextColor3=STYLE.Text})
        local corner = new('UICorner') corner.CornerRadius = UDim.new(0,6) corner.Parent = btn
        local current = opts.CurrentKeybind and tostring(opts.CurrentKeybind) or "None"
        local binding = false

        btn.MouseButton1Click:Connect(function()
            btn.Text = "Press key..."
            binding = true
            local conn
            conn = UserInputService.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    current = input.KeyCode.Name
                    btn.Text = current
                    binding = false
                    if conn then conn:Disconnect() end
                    if opts.Flag then Window._flags[opts.Flag] = current end
                end
            end)
        end)

        -- global listener
        UserInputService.InputBegan:Connect(function(input, gp)
            if gp then return end
            if input.UserInputType == Enum.UserInputType.Keyboard then
                if input.KeyCode.Name == current then
                    pcall(function() if opts.Callback then opts.Callback(true) end end)
                end
            end
        end)

        frame.Parent = tab and tab.page and tab.page.Left or PagesHolder
        return {Set=function(k) current=k; btn.Text=k end, CurrentKeybind=current, Destroy=function() frame:Destroy() end}
    end

    -- Colorpicker: simplified preset + small palette
    function Window:CreateColorPicker(tab, opts)
        opts = opts or {}
        local frame = new('Frame',{Size=UDim2.new(1,0,0,72), BackgroundTransparency=1})
        local title = new('TextLabel',{Parent=frame, Size=UDim2.new(1,0,0,18), BackgroundTransparency=1, Text=opts.Name or 'Color', Font=Enum.Font.Gotham, TextColor3=STYLE.Text, TextSize=14, TextXAlignment=Enum.TextXAlignment.Left})
        local preview = new('Frame',{Parent=frame, Position=UDim2.new(0,0,0,20), Size=UDim2.new(0,44,0,44), BackgroundColor3 = opts.Color or STYLE.Accent})
        local pcorner = new('UICorner') pcorner.CornerRadius = UDim.new(0,8) pcorner.Parent = preview
        local palette = new('Frame',{Parent=frame, Position=UDim2.new(0,56,0,20), Size=UDim2.new(1,-64,0,44), BackgroundTransparency=1})
        local presets = {Color3.fromRGB(207,227,0), Color3.fromRGB(90,200,250), Color3.fromRGB(255,59,48), Color3.fromRGB(88,86,214)}
        local x = 0
        for i,c in ipairs(presets) do
            local b = new('TextButton',{Parent=palette, Position=UDim2.new(0,x,0,0), Size=UDim2.new(0,36,0,36), BackgroundColor3 = c, Text = ''})
            local bc = new('UICorner') bc.CornerRadius = UDim.new(0,6) bc.Parent = b
            b.MouseButton1Click:Connect(function()
                preview.BackgroundColor3 = c
                if opts.Callback then pcall(opts.Callback, c) end
                if opts.Flag then Window._flags[opts.Flag] = c end
            end)
            x = x + 40
        end
        frame.Parent = tab and tab.page and tab.page.Left or PagesHolder
        return {Set=function(c) preview.BackgroundColor3=c end, Destroy=function() frame:Destroy() end}
    end

    -- ScriptHub utility
    function Window:CreateScriptHub(scriptsTable)
        scriptsTable = scriptsTable or {}
        local hubTab = self:CreateTab("Home", "")
        local sect = hubTab:CreateSection("Script Hub", "left")

        local listHolder = new('Frame',{Parent=sect.Content, Size=UDim2.new(1,0,0,320), BackgroundTransparency=1})
        local scroll = new('ScrollingFrame',{Parent=listHolder, Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, ScrollBarThickness=6, CanvasSize = UDim2.new(0,0,0,0)})
        local layout = new('UIListLayout') layout.Parent = scroll layout.Padding = UDim.new(0,8)

        local function populate(filter)
            for _,c in pairs(scroll:GetChildren()) do if c.Name:match('^script_item_') then c:Destroy() end end
            for i,s in ipairs(scriptsTable) do
                if (not filter or filter == "") or (s.Name and s.Name:lower():find(filter:lower())) or (s.Description and s.Description:lower():find(filter:lower())) then
                    local item = new('Frame',{Parent=scroll, Name = 'script_item_'..i, Size = UDim2.new(1,0,0,72), BackgroundColor3 = Color3.fromRGB(26,26,26), BorderSizePixel = 0})
                    local icorner = new('UICorner') icorner.CornerRadius = UDim.new(0,6) icorner.Parent = item
                    local title = new('TextLabel',{Parent=item, Position=UDim2.new(0,12,0,8), Size=UDim2.new(0.6, -12,0,20), BackgroundTransparency=1, Text = s.Name or 'Script', Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = STYLE.Text})
                    local desc = new('TextLabel',{Parent=item, Position=UDim2.new(0,12,0,30), Size=UDim2.new(1,-120,0,34), BackgroundTransparency=1, Text = s.Description or '', Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = STYLE.SubText, TextWrapped=true})
                    local run = new('TextButton',{Parent=item, Size=UDim2.new(0,84,0,32), Position=UDim2.new(1,-96,0.5,-16), BackgroundColor3 = Window._accent, Text = 'Run', Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Color3.new(1,1,1)})
                    local rc = new('UICorner') rc.CornerRadius = UDim.new(0,6) rc.Parent = run
                    run.MouseButton1Click:Connect(function()
                        if s.Callback then pcall(s.Callback) end
                        if s.Url then
                            pcall(function() loadstring(game:HttpGet(s.Url))() end)
                        end
                    end)
                end
            end
            task.wait()
            scroll.CanvasSize = UDim2.new(0,0,0, layout.AbsoluteContentBounds.Y + 8)
        end

        -- connect search box
        self._search:GetPropertyChangedSignal("Text"):Connect(function()
            populate(self._search.Text)
        end)
        populate("")

        return {Populate = function(tbl) scriptsTable = tbl; populate(self._search.Text) end}
    end

    -- Config save/load
    function Window:SaveConfiguration()
        if not self._config.Enabled then return false end
        local ok, json = pcall(function() return HttpService:JSONEncode(self._flags) end)
        if not ok then return false end
        local filename = (self._config.FolderName and (self._config.FolderName .. "/") or "") .. self._config.FileName .. ".json"
        return writeOK(filename, json)
    end
    function Window:LoadConfiguration()
        if not self._config.Enabled then return false end
        local filename = (self._config.FolderName and (self._config.FolderName .. "/") or "") .. self._config.FileName .. ".json"
        local data = readOK(filename)
        if not data then return false end
        local ok, tbl = pcall(function() return HttpService:JSONDecode(data) end)
        if not ok then return false end
        for k,v in pairs(tbl) do self._flags[k] = v end
        return true
    end

    function Window:Destroy()
        if screen and screen.Parent then screen:Destroy() end
    end

    -- Finalise - tween open size
    TweenService:Create(Outline, STYLE.Tween, {Size = STYLE.WindowSize}):Play()

    setmetatable(Window, {__index = Lynk})
    return Window
end

return Lynk
