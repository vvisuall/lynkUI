--[[

 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó       ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù        ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó        ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë
‚ïö‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù
 ‚ïö‚ïù‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù 

]]--

-- lynkUI v2.0 - Professional Script Hub UI Library (PC VERSION)
-- Author: Enhanced by Claude for universal script hub
-- Features: Modern design, smooth animations, player profile, search functionality
-- Four main tabs: Home (Script Hub), Updates, Credits, Settings

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
    error("lynkUI: LocalPlayer not found - run as a LocalScript / exploit local")
end

-- Enhanced Utilities
local function new(class, props)
    local inst = Instance.new(class)
    if type(props) == "table" then
        for k,v in pairs(props) do
            pcall(function() inst[k] = v end)
        end
    end
    return inst
end

local function createGradient(parent, colors, rotation)
    local gradient = new("UIGradient", {
        Color = ColorSequence.new(colors),
        Rotation = rotation or 0
    })
    gradient.Parent = parent
    return gradient
end

local function createGlow(parent, color, size)
    local glow = new("ImageLabel", {
        Name = "Glow",
        Parent = parent,
        BackgroundTransparency = 1,
        Image = "rbxasset://textures/ui/Glow.png",
        ImageColor3 = color or Color3.new(1,1,1),
        ImageTransparency = 0.8,
        Size = size or UDim2.new(1, 20, 1, 20),
        Position = UDim2.new(0, -10, 0, -10),
        ZIndex = parent.ZIndex - 1
    })
    return glow
end

-- Professional Color Palette
local THEME = {
    WindowSize = UDim2.new(0, 880, 0, 560),
    
    -- Dark theme colors
    Background = Color3.fromRGB(11, 11, 13),
    Surface = Color3.fromRGB(15, 15, 17),
    Panel = Color3.fromRGB(19, 19, 22),
    Card = Color3.fromRGB(23, 23, 27),
    
    -- Accent colors
    Primary = Color3.fromRGB(88, 101, 242),    -- Discord-like purple
    Secondary = Color3.fromRGB(114, 137, 218), -- Lighter purple
    Success = Color3.fromRGB(67, 181, 129),    -- Green
    Warning = Color3.fromRGB(250, 166, 26),    -- Orange
    Danger = Color3.fromRGB(237, 66, 69),      -- Red
    
    -- Text colors
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(185, 187, 190),
    TextMuted = Color3.fromRGB(114, 118, 125),
    
    -- Border and dividers
    Border = Color3.fromRGB(35, 35, 40),
    Divider = Color3.fromRGB(45, 45, 50),
    
    -- Corner radius
    CornerRadius = UDim.new(0, 12),
    SmallCornerRadius = UDim.new(0, 8),
    
    -- Animation settings
    FastTween = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    MediumTween = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    SlowTween = TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
}

-- Added key system variables and functions
local KEY_SYSTEM_ENABLED = true
local VALID_KEY = "4tB8vW1pR6sY9Jq"
local KEY_LINK = "https://sub2unlock.io/3HTi5"

-- Global notification settings
local NOTIFICATIONS_ENABLED = true

-- FIXED: Emoji constants to prevent obfuscation issues
local EMOJIS = {
    GLOBE = utf8.char(127760), -- üåê
    KEY = utf8.char(128273),   -- üîë
    SEARCH = utf8.char(128269), -- üîç
    REFRESH = utf8.char(128260), -- üîÑ
    SETTINGS = utf8.char(9881),  -- ‚öôÔ∏è
    SUCCESS = utf8.char(9989),   -- ‚úÖ
    WARNING = utf8.char(9888),   -- ‚ö†Ô∏è
    INFO = utf8.char(8505),      -- ‚ÑπÔ∏è
    MINIMIZE = utf8.char(8722),  -- ‚àí
    MAXIMIZE = utf8.char(9633),  -- ‚¨ú
    CLOSE = utf8.char(10005),    -- ‚úï
}

-- Notification system
local NotificationQueue = {}
local ActiveNotifications = {}

local function createNotification(title, message, duration, notificationType)
    if not NOTIFICATIONS_ENABLED then return end
    
    duration = duration or 4
    notificationType = notificationType or "info"
    
    -- Create notification ScreenGui
    local notifScreen = new("ScreenGui", {
        Name = "LynkNotification",
        ResetOnSpawn = false,
        DisplayOrder = 999999999,
        IgnoreGuiInset = true,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })
    notifScreen.Parent = game:GetService("CoreGui")
    
    -- Notification container
    local notifContainer = new("Frame", {
        Name = "NotificationContainer",
        Position = UDim2.new(1, 20, 0, 20 + (#ActiveNotifications * 80)),
        Size = UDim2.new(0, 280, 0, 60), -- FIXED: Made smaller
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0,
        ZIndex = 1000
    })
    notifContainer.Parent = notifScreen
    
    local notifCorner = new("UICorner")
    notifCorner.CornerRadius = THEME.SmallCornerRadius
    notifCorner.Parent = notifContainer
    
    -- Notification icon
    local iconColors = {
        success = THEME.Success,
        warning = THEME.Warning,
        error = THEME.Danger,
        info = THEME.Primary
    }
    
    local iconEmojis = {
        success = EMOJIS.SUCCESS,
        warning = EMOJIS.WARNING,
        error = EMOJIS.CLOSE,
        info = EMOJIS.INFO
    }
    
    local notifIcon = new("TextLabel", {
        Name = "NotificationIcon",
        Position = UDim2.new(0, 15, 0.5, -10),
        Size = UDim2.new(0, 20, 0, 20),
        BackgroundTransparency = 1,
        Text = iconEmojis[notificationType] or EMOJIS.INFO,
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = iconColors[notificationType] or THEME.Primary,
        TextXAlignment = Enum.TextXAlignment.Center,
        TextYAlignment = Enum.TextYAlignment.Center,
        ZIndex = 1001
    })
    notifIcon.Parent = notifContainer
    
    -- Notification title
    local notifTitle = new("TextLabel", {
        Name = "NotificationTitle",
        Position = UDim2.new(0, 45, 0, 8),
        Size = UDim2.new(1, -55, 0, 18),
        BackgroundTransparency = 1,
        Text = title,
        Font = Enum.Font.GothamBold,
        TextSize = 12,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextTruncate = Enum.TextTruncate.AtEnd,
        ZIndex = 1001
    })
    notifTitle.Parent = notifContainer
    
    -- Notification message
    local notifMessage = new("TextLabel", {
        Name = "NotificationMessage",
        Position = UDim2.new(0, 45, 0, 28),
        Size = UDim2.new(1, -55, 0, 24),
        BackgroundTransparency = 1,
        Text = message,
        Font = Enum.Font.Gotham,
        TextSize = 10,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextWrapped = true,
        ZIndex = 1001
    })
    notifMessage.Parent = notifContainer
    
    -- Add to active notifications
    table.insert(ActiveNotifications, notifScreen)
    
    -- Slide in animation
    TweenService:Create(notifContainer, THEME.MediumTween, {
        Position = UDim2.new(1, -300, 0, 20 + ((#ActiveNotifications - 1) * 80))
    }):Play()
    
    -- Play notification sound
    spawn(function()
        local success, sound = pcall(function()
            local notifSound = new("Sound", {
                SoundId = "rbxassetid://131961136",
                Volume = 0.3,
                Pitch = 1.2
            })
            notifSound.Parent = SoundService
            notifSound:Play()
            
            notifSound.Ended:Connect(function()
                notifSound:Destroy()
            end)
        end)
    end)
    
    -- Auto dismiss with fallback cleanup
    spawn(function()
        wait(duration)
        
        -- Slide out animation
        TweenService:Create(notifContainer, THEME.FastTween, {
            Position = UDim2.new(1, 20, 0, 20 + ((#ActiveNotifications - 1) * 80))
        }):Play()
        
        wait(0.2)
        
        -- Remove from active notifications
        for i, notif in ipairs(ActiveNotifications) do
            if notif == notifScreen then
                table.remove(ActiveNotifications, i)
                break
            end
        end
        
        -- Cleanup
        if notifScreen and notifScreen.Parent then
            notifScreen:Destroy()
        end
    end)
    
    -- Fallback cleanup after 8 seconds
    spawn(function()
        wait(8)
        if notifScreen and notifScreen.Parent then
            for i, notif in ipairs(ActiveNotifications) do
                if notif == notifScreen then
                    table.remove(ActiveNotifications, i)
                    break
                end
            end
            notifScreen:Destroy()
        end
    end)
end

local function createKeySystem(Window)
    -- Force mouse unlock for first-person games
    UserInputService.MouseBehavior = Enum.MouseBehavior.Default
    
    -- Key system ScreenGui with CoreGui override
    local keyScreen = new("ScreenGui", {
        Name = "KeySystem",
        ResetOnSpawn = false,
        DisplayOrder = 999999999,
        IgnoreGuiInset = true,
        ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })
    keyScreen.Parent = game:GetService("CoreGui")

    -- Background blur
    local keyBlurFrame = new("Frame", {
        Name = "KeyBlurContainer",
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundColor3 = Color3.new(0, 0, 0),
        BackgroundTransparency = 0.3,
        BorderSizePixel = 0,
        Visible = true,
        ZIndex = 999999
    })
    keyBlurFrame.Parent = keyScreen

    -- Main key window
    local keyWindow = new("Frame", {
        Name = "KeyWindow",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(0, 400, 0, 250),
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0,
        ZIndex = 1000000
    })
    keyWindow.Parent = keyBlurFrame
    
    local keyCorner = new("UICorner")
    keyCorner.CornerRadius = THEME.CornerRadius
    keyCorner.Parent = keyWindow

    -- Add glow effect
    createGlow(keyWindow, THEME.Primary)

    -- Close button
    local closeButton = new("TextButton", {
        Name = "CloseButton",
        Position = UDim2.new(1, -35, 0, 10),
        Size = UDim2.new(0, 25, 0, 25),
        BackgroundColor3 = THEME.Danger,
        BorderSizePixel = 0,
        Text = EMOJIS.CLOSE,
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = THEME.Text,
        AutoButtonColor = false,
        ZIndex = 1000001
    })
    closeButton.Parent = keyWindow
    
    local closeCorner = new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = closeButton

    -- Title
    local title = new("TextLabel", {
        Name = "Title",
        Position = UDim2.new(0, 0, 0, 20),
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundTransparency = 1,
        Text = "Lynk Universal",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Center,
        ZIndex = 1000001
    })
    title.Parent = keyWindow

    -- Subtitle
    local subtitle = new("TextLabel", {
        Name = "Subtitle",
        Position = UDim2.new(0, 0, 0, 55),
        Size = UDim2.new(1, 0, 0, 20),
        BackgroundTransparency = 1,
        Text = "Key Login",
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Center,
        ZIndex = 1000001
    })
    subtitle.Parent = keyWindow

    -- Key input
    local keyInput = new("TextBox", {
        Name = "KeyInput",
        Position = UDim2.new(0, 30, 0, 100),
        Size = UDim2.new(1, -60, 0, 35),
        BackgroundColor3 = THEME.Panel,
        BorderSizePixel = 0,
        PlaceholderText = "Enter your key here...",
        PlaceholderColor3 = THEME.TextMuted,
        Text = "",
        Font = Enum.Font.Gotham,
        TextSize = 12,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        ClearTextOnFocus = false,
        ZIndex = 1000001
    })
    keyInput.Parent = keyWindow
    
    local inputCorner = new("UICorner")
    inputCorner.CornerRadius = THEME.SmallCornerRadius
    inputCorner.Parent = keyInput

    -- Add padding to input
    local inputPadding = new("UIPadding", {
        PaddingLeft = UDim.new(0, 10),
        PaddingRight = UDim.new(0, 10)
    })
    inputPadding.Parent = keyInput

    -- Activate Key button
    local activateButton = new("TextButton", {
        Name = "ActivateButton",
        Position = UDim2.new(0, 30, 0, 155),
        Size = UDim2.new(0, 160, 0, 35),
        BackgroundColor3 = THEME.Warning,
        BorderSizePixel = 0,
        Text = "Activate Key",
        Font = Enum.Font.GothamSemibold,
        TextSize = 12,
        TextColor3 = Color3.new(0, 0, 0),
        AutoButtonColor = false,
        ZIndex = 1000001
    })
    activateButton.Parent = keyWindow
    
    local activateCorner = new("UICorner")
    activateCorner.CornerRadius = THEME.SmallCornerRadius
    activateCorner.Parent = activateButton

    -- Get Key button
    local getKeyButton = new("TextButton", {
        Name = "GetKeyButton",
        Position = UDim2.new(0, 210, 0, 155),
        Size = UDim2.new(0, 160, 0, 35),
        BackgroundColor3 = THEME.Panel,
        BorderSizePixel = 0,
        Text = "Get Key",
        Font = Enum.Font.GothamSemibold,
        TextSize = 12,
        TextColor3 = THEME.Text,
        AutoButtonColor = false,
        ZIndex = 1000001
    })
    getKeyButton.Parent = keyWindow
    
    local getKeyCorner = new("UICorner")
    getKeyCorner.CornerRadius = THEME.SmallCornerRadius
    getKeyCorner.Parent = getKeyButton

    -- Status message
    local statusMessage = new("TextLabel", {
        Name = "StatusMessage",
        Position = UDim2.new(0, 30, 0, 205),
        Size = UDim2.new(1, -60, 0, 20),
        BackgroundTransparency = 1,
        Text = "",
        Font = Enum.Font.Gotham,
        TextSize = 11,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Center,
        ZIndex = 1000001
    })
    statusMessage.Parent = keyWindow

    -- Make window draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil

    keyWindow.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = keyWindow.Position
        end
    end)

    keyWindow.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            keyWindow.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    keyWindow.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- Button animations
    local function animateKeyButton(button, hoverColor, normalColor)
        button.MouseEnter:Connect(function()
            TweenService:Create(button, THEME.FastTween, {BackgroundColor3 = hoverColor}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, THEME.FastTween, {BackgroundColor3 = normalColor}):Play()
        end)
    end

    animateKeyButton(activateButton, Color3.fromRGB(255, 180, 40), THEME.Warning)
    animateKeyButton(getKeyButton, THEME.Card, THEME.Panel)
    animateKeyButton(closeButton, Color3.fromRGB(255, 80, 80), THEME.Danger)

    -- Get Key button functionality
    getKeyButton.MouseButton1Click:Connect(function()
        setclipboard(KEY_LINK)
        statusMessage.Text = "Link copied to clipboard! Paste it in your browser."
        statusMessage.TextColor3 = THEME.Success
        wait(3)
        statusMessage.Text = ""
    end)

    -- Close button functionality
    closeButton.MouseButton1Click:Connect(function()
        keyScreen:Destroy()
    end)

    -- Activate Key button functionality
    activateButton.MouseButton1Click:Connect(function()
        local enteredKey = keyInput.Text
        
        if enteredKey == "" then
            statusMessage.Text = "Please enter a key!"
            statusMessage.TextColor3 = THEME.Danger
            return
        end

        statusMessage.Text = "Checking key..."
        statusMessage.TextColor3 = THEME.TextSecondary
        
        wait(1)
        
        if enteredKey == VALID_KEY then
            statusMessage.Text = "Success!"
            statusMessage.TextColor3 = THEME.Success
            
            -- Fade out all elements simultaneously
            local fadeOutTweens = {}
            
            -- Fade background
            table.insert(fadeOutTweens, TweenService:Create(keyBlurFrame, THEME.MediumTween, {BackgroundTransparency = 1}))
            table.insert(fadeOutTweens, TweenService:Create(keyWindow, THEME.MediumTween, {BackgroundTransparency = 1}))
            
            -- Fade all child elements
            for _, child in pairs(keyWindow:GetChildren()) do
                if child:IsA("GuiObject") then
                    local fadeProps = {BackgroundTransparency = 1}
                    if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
                        fadeProps.TextTransparency = 1
                    end
                    table.insert(fadeOutTweens, TweenService:Create(child, THEME.MediumTween, fadeProps))
                end
            end
            
            -- Play all fade tweens
            for _, tween in pairs(fadeOutTweens) do
                tween:Play()
            end
            
            -- Wait for fade to complete then destroy and unlock window
            wait(THEME.MediumTween.Time + 0.1)
            keyScreen:Destroy()
            
            -- Unlock the window and show it
            Window._locked = false
            task.delay(0.1, function()
                Window:Show()
            end)
        else
            statusMessage.Text = "Invalid key!"
            statusMessage.TextColor3 = THEME.Danger
        end
    end)

    -- Enter key support
    keyInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            activateButton.MouseButton1Click:Fire()
        end
    end)

    return keyScreen
end

local Lynk = {}
Lynk.__index = Lynk

function Lynk:CreateWindow(opts)
    opts = opts or {}
    local Window = {}
    Window._tabs = {}
    Window._currentTab = nil
    Window._accent = opts.Accent or THEME.Primary
    Window._logo = opts.Logo or "rbxassetid://17673929618"
    Window._title = opts.Title or (opts.Name or "lynkUI v2.0")
    Window._subtitle = opts.Subtitle or "Universal Script Hub"
    Window._uiKey = opts.DefaultKeybind or Enum.KeyCode.Insert
    Window._shown = false
    Window._minimized = false

    -- Gate the window but still build it (no early return)
    Window._locked = KEY_SYSTEM_ENABLED == true

    -- Create ScreenGui with CoreGui override
    local screen = new("ScreenGui", {
        Name = opts.Name or "lynkUI",
        ResetOnSpawn = false,
        DisplayOrder = 999999998,
        IgnoreGuiInset = true,
        ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })
    screen.Parent = game:GetService("CoreGui")

    -- Main container with blur effect
    local BlurFrame = new("Frame", {
        Name = "BlurContainer",
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundColor3 = Color3.new(0, 0, 0),
        BackgroundTransparency = 0.3,
        BorderSizePixel = 0,
        Visible = false,
        ZIndex = 999998
    })
    BlurFrame.Parent = screen

    -- Main window outline
    local Outline = new("Frame", {
        Name = "Outline",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = THEME.Border,
        BorderSizePixel = 0,
        ZIndex = 999999
    })
    Outline.Parent = BlurFrame
    
    local outlineCorner = new("UICorner")
    outlineCorner.CornerRadius = THEME.CornerRadius
    outlineCorner.Parent = Outline

    -- Add subtle glow to outline
    createGlow(Outline, Window._accent)

    -- Main content frame
    local MainFrame = new("Frame", {
        Name = "MainFrame",
        Position = UDim2.new(0, 2, 0, 2),
        Size = UDim2.new(1, -4, 1, -4),
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0,
        ZIndex = 1000000
    })
    MainFrame.Parent = Outline
    
    local mainCorner = new("UICorner")
    mainCorner.CornerRadius = THEME.CornerRadius
    mainCorner.Parent = MainFrame

    -- Sidebar (left panel)
    local Sidebar = new("Frame", {
        Name = "Sidebar",
        Size = UDim2.new(0, 280, 1, 0),
        BackgroundColor3 = THEME.Surface,
        BorderSizePixel = 0,
        ZIndex = 1000001
    })
    Sidebar.Parent = MainFrame
    
    local sidebarCorner = new("UICorner")
    sidebarCorner.CornerRadius = THEME.CornerRadius
    sidebarCorner.Parent = Sidebar

    -- Sidebar gradient
    createGradient(Sidebar, {
        ColorSequenceKeypoint.new(0, THEME.Surface),
        ColorSequenceKeypoint.new(1, THEME.Panel)
    }, 90)

    -- Player Profile Section
    local ProfileContainer = new("Frame", {
        Name = "ProfileContainer",
        Position = UDim2.new(0, 20, 0, 20),
        Size = UDim2.new(1, -40, 0, 80),
        BackgroundColor3 = THEME.Card,
        BorderSizePixel = 0,
        ZIndex = 1000002
    })
    ProfileContainer.Parent = Sidebar
    
    local profileCorner = new("UICorner")
    profileCorner.CornerRadius = THEME.SmallCornerRadius
    profileCorner.Parent = ProfileContainer

    -- Player avatar (circular)
    local AvatarContainer = new("Frame", {
        Name = "AvatarContainer",
        Position = UDim2.new(0, 12, 0, 12),
        Size = UDim2.new(0, 56, 0, 56),
        BackgroundColor3 = THEME.Primary,
        BorderSizePixel = 0,
        ZIndex = 1000003
    })
    AvatarContainer.Parent = ProfileContainer
    
    local avatarCorner = new("UICorner")
    avatarCorner.CornerRadius = UDim.new(0.5, 0)
    avatarCorner.Parent = AvatarContainer

    local PlayerAvatar = new("ImageLabel", {
        Name = "PlayerAvatar",
        Position = UDim2.new(0, 2, 0, 2),
        Size = UDim2.new(1, -4, 1, -4),
        Image = Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420),
        BackgroundTransparency = 1,
        ScaleType = Enum.ScaleType.Crop,
        ZIndex = 1000004
    })
    PlayerAvatar.Parent = AvatarContainer
    
    local playerAvatarCorner = new("UICorner")
    playerAvatarCorner.CornerRadius = UDim.new(0.5, 0)
    playerAvatarCorner.Parent = PlayerAvatar

    -- Player username
    local PlayerName = new("TextLabel", {
        Name = "PlayerName",
        Position = UDim2.new(0, 80, 0, 15),
        Size = UDim2.new(1, -92, 0, 24),
        BackgroundTransparency = 1,
        Text = "@" .. LocalPlayer.Name,
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextTruncate = Enum.TextTruncate.AtEnd,
        ZIndex = 1000003
    })
    PlayerName.Parent = ProfileContainer

    -- Online status indicator
    local StatusIndicator = new("Frame", {
        Name = "StatusIndicator",
        Position = UDim2.new(0, 80, 0, 42),
        Size = UDim2.new(0, 8, 0, 8),
        BackgroundColor3 = THEME.Success,
        BorderSizePixel = 0,
        ZIndex = 1000003
    })
    StatusIndicator.Parent = ProfileContainer
    
    local statusCorner = new("UICorner")
    statusCorner.CornerRadius = UDim.new(0.5, 0)
    statusCorner.Parent = StatusIndicator

    local StatusText = new("TextLabel", {
        Name = "StatusText",
        Position = UDim2.new(0, 96, 0, 38),
        Size = UDim2.new(1, -108, 0, 16),
        BackgroundTransparency = 1,
        Text = "Online",
        Font = Enum.Font.Gotham,
        TextSize = 12,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 1000003
    })
    StatusText.Parent = ProfileContainer

    -- Tabs container
    local TabsContainer = new("Frame", {
        Name = "TabsContainer",
        Position = UDim2.new(0, 20, 0, 120),
        Size = UDim2.new(1, -40, 1, -140),
        BackgroundTransparency = 1,
        ZIndex = 1000002
    })
    TabsContainer.Parent = Sidebar

    local tabsLayout = new("UIListLayout")
    tabsLayout.Parent = TabsContainer
    tabsLayout.Padding = UDim.new(0, 8)
    tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Content area
    local ContentArea = new("Frame", {
        Name = "ContentArea",
        Position = UDim2.new(0, 280, 0, 0),
        Size = UDim2.new(1, -280, 1, 0),
        BackgroundTransparency = 1,
        ZIndex = 1000001
    })
    ContentArea.Parent = MainFrame

    -- Top bar in content area
    local TopBar = new("Frame", {
        Name = "TopBar",
        Size = UDim2.new(1, 0, 0, 80),
        BackgroundTransparency = 1,
        ZIndex = 1000002
    })
    TopBar.Parent = ContentArea

    -- Title section
    local TitleContainer = new("Frame", {
        Name = "TitleContainer",
        Position = UDim2.new(0, 30, 0, 20),
        Size = UDim2.new(0.6, 0, 0, 40),
        BackgroundTransparency = 1,
        ZIndex = 1000003
    })
    TitleContainer.Parent = TopBar

    local MainTitle = new("TextLabel", {
        Name = "MainTitle",
        Size = UDim2.new(1, 0, 0, 24),
        BackgroundTransparency = 1,
        Text = Window._title,
        Font = Enum.Font.GothamBold,
        TextSize = 24,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 1000004
    })
    MainTitle.Parent = TitleContainer

    local Subtitle = new("TextLabel", {
        Name = "Subtitle",
        Position = UDim2.new(0, 0, 0, 24),
        Size = UDim2.new(1, 0, 0, 16),
        BackgroundTransparency = 1,
        Text = Window._subtitle,
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = THEME.TextMuted,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 1000004
    })
    Subtitle.Parent = TitleContainer

    -- FIXED: Minimize button with theme colors
    local MinimizeButton = new("TextButton", {
        Name = "MinimizeButton",
        Position = UDim2.new(1, -110, 0, 20),
        Size = UDim2.new(0, 40, 0, 40),
        BackgroundColor3 = THEME.Panel, -- FIXED: Use theme color instead of orange
        Text = EMOJIS.MINIMIZE,
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        TextColor3 = THEME.Text,
        AutoButtonColor = false,
        ZIndex = 1000003
    })
    MinimizeButton.Parent = TopBar
    
    local minimizeCorner = new("UICorner")
    minimizeCorner.CornerRadius = THEME.SmallCornerRadius
    minimizeCorner.Parent = MinimizeButton

    -- FIXED: Close button with theme colors
    local CloseButton = new("TextButton", {
        Name = "CloseButton",
        Position = UDim2.new(1, -60, 0, 20),
        Size = UDim2.new(0, 40, 0, 40),
        BackgroundColor3 = THEME.Surface, -- FIXED: Use theme color instead of red
        Text = EMOJIS.CLOSE,
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        TextColor3 = THEME.Text,
        AutoButtonColor = false,
        ZIndex = 1000003
    })
    CloseButton.Parent = TopBar
    
    local closeCorner = new("UICorner")
    closeCorner.CornerRadius = THEME.SmallCornerRadius
    closeCorner.Parent = CloseButton

    -- Button hover effects
    local function animateButton(button, hoverColor, normalColor)
        button.MouseEnter:Connect(function()
            TweenService:Create(button, THEME.FastTween, {BackgroundColor3 = hoverColor}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, THEME.FastTween, {BackgroundColor3 = normalColor}):Play()
        end)
    end
    
    animateButton(MinimizeButton, THEME.Card, THEME.Panel)
    animateButton(CloseButton, THEME.Danger, THEME.Surface)

    -- Create minimized taskbar
    local MinimizedTaskbar = new("Frame", {
        Name = "MinimizedTaskbar",
        AnchorPoint = Vector2.new(0.5, 1),
        Position = UDim2.new(0.5, 0, 1, -20),
        Size = UDim2.new(0, 200, 0, 40),
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0,
        Visible = false,
        ZIndex = 999999
    })
    MinimizedTaskbar.Parent = screen
    
    local taskbarCorner = new("UICorner")
    taskbarCorner.CornerRadius = THEME.SmallCornerRadius
    taskbarCorner.Parent = MinimizedTaskbar
    
    local taskbarOutline = new("UIStroke", {
        Color = THEME.Border,
        Thickness = 1
    })
    taskbarOutline.Parent = MinimizedTaskbar

    -- Taskbar title
    local TaskbarTitle = new("TextLabel", {
        Name = "TaskbarTitle",
        Position = UDim2.new(0, 15, 0, 0),
        Size = UDim2.new(1, -80, 1, 0),
        BackgroundTransparency = 1,
        Text = "Lynk Universal",
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextYAlignment = Enum.TextYAlignment.Center,
        ZIndex = 1000000
    })
    TaskbarTitle.Parent = MinimizedTaskbar

    -- Expand button
    local ExpandButton = new("TextButton", {
        Name = "ExpandButton",
        Position = UDim2.new(1, -65, 0.5, -12),
        Size = UDim2.new(0, 24, 0, 24),
        BackgroundColor3 = THEME.Primary,
        Text = EMOJIS.MAXIMIZE,
        Font = Enum.Font.GothamBold,
        TextSize = 12,
        TextColor3 = THEME.Text,
        AutoButtonColor = false,
        ZIndex = 1000001
    })
    ExpandButton.Parent = MinimizedTaskbar
    
    local expandCorner = new("UICorner")
    expandCorner.CornerRadius = UDim.new(0, 4)
    expandCorner.Parent = ExpandButton

    -- Taskbar close button
    local TaskbarCloseButton = new("TextButton", {
        Name = "TaskbarCloseButton",
        Position = UDim2.new(1, -35, 0.5, -12),
        Size = UDim2.new(0, 24, 0, 24),
        BackgroundColor3 = THEME.Danger,
        Text = EMOJIS.CLOSE,
        Font = Enum.Font.GothamBold,
        TextSize = 12,
        TextColor3 = THEME.Text,
        AutoButtonColor = false,
        ZIndex = 1000001
    })
    TaskbarCloseButton.Parent = MinimizedTaskbar
    
    local taskbarCloseCorner = new("UICorner")
    taskbarCloseCorner.CornerRadius = UDim.new(0, 4)
    taskbarCloseCorner.Parent = TaskbarCloseButton

    -- Make taskbar draggable
    local taskbarDragging = false
    local taskbarDragStart = nil
    local taskbarStartPos = nil

    TaskbarTitle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            taskbarDragging = true
            taskbarDragStart = input.Position
            taskbarStartPos = MinimizedTaskbar.Position
        end
    end)

    TaskbarTitle.InputChanged:Connect(function(input)
        if taskbarDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - taskbarDragStart
            MinimizedTaskbar.Position = UDim2.new(taskbarStartPos.X.Scale, taskbarStartPos.X.Offset + delta.X, taskbarStartPos.Y.Scale, taskbarStartPos.Y.Offset + delta.Y)
        end
    end)

    TaskbarTitle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            taskbarDragging = false
        end
    end)

    -- Create confirmation popup
    local ConfirmationPopup = new("Frame", {
        Name = "ConfirmationPopup",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0,
        Visible = false,
        ZIndex = 1000100
    })
    ConfirmationPopup.Parent = BlurFrame
    
    local popupCorner = new("UICorner")
    popupCorner.CornerRadius = THEME.CornerRadius
    popupCorner.Parent = ConfirmationPopup

    -- Popup outline
    local PopupOutline = new("UIStroke", {
        Color = THEME.Border,
        Thickness = 2
    })
    PopupOutline.Parent = ConfirmationPopup

    -- Popup title
    local PopupTitle = new("TextLabel", {
        Name = "PopupTitle",
        Position = UDim2.new(0, 20, 0, 20),
        Size = UDim2.new(1, -40, 0, 30),
        BackgroundTransparency = 1,
        Text = "Confirm Close",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 1000101
    })
    PopupTitle.Parent = ConfirmationPopup

    -- Popup message
    local PopupMessage = new("TextLabel", {
        Name = "PopupMessage",
        Position = UDim2.new(0, 20, 0, 60),
        Size = UDim2.new(1, -40, 0, 60),
        BackgroundTransparency = 1,
        Text = "Are you sure you want to close?\nInstead press Insert to toggle the UI.",
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextWrapped = true,
        ZIndex = 1000101
    })
    PopupMessage.Parent = ConfirmationPopup

    -- Yes button (green)
    local YesButton = new("TextButton", {
        Name = "YesButton",
        Position = UDim2.new(0, 20, 1, -60),
        Size = UDim2.new(0, 100, 0, 40),
        BackgroundColor3 = Color3.fromRGB(46, 160, 67),
        Text = "Yes",
        Font = Enum.Font.GothamSemibold,
        TextSize = 16,
        TextColor3 = Color3.new(1, 1, 1),
        AutoButtonColor = false,
        ZIndex = 1000101
    })
    YesButton.Parent = ConfirmationPopup
    
    local yesCorner = new("UICorner")
    yesCorner.CornerRadius = THEME.SmallCornerRadius
    yesCorner.Parent = YesButton

    -- No button (red)
    local NoButton = new("TextButton", {
        Name = "NoButton",
        Position = UDim2.new(1, -120, 1, -60),
        Size = UDim2.new(0, 100, 0, 40),
        BackgroundColor3 = Color3.fromRGB(220, 50, 50),
        Text = "No",
        Font = Enum.Font.GothamSemibold,
        TextSize = 16,
        TextColor3 = Color3.new(1, 1, 1),
        AutoButtonColor = false,
        ZIndex = 1000101
    })
    NoButton.Parent = ConfirmationPopup
    
    local noCorner = new("UICorner")
    noCorner.CornerRadius = THEME.SmallCornerRadius
    noCorner.Parent = NoButton

    -- Button hover effects for popup buttons
    animateButton(YesButton, Color3.fromRGB(56, 180, 77), Color3.fromRGB(46, 160, 67))
    animateButton(NoButton, Color3.fromRGB(240, 70, 70), Color3.fromRGB(220, 50, 50))

    -- Pages container with smooth transitions
    local PagesContainer = new("Frame", {
        Name = "PagesContainer",
        Position = UDim2.new(0, 30, 0, 80),
        Size = UDim2.new(1, -60, 1, -100),
        BackgroundTransparency = 1,
        ClipsDescendants = true,
        ZIndex = 1000002
    })
    PagesContainer.Parent = ContentArea

    -- Store references
    Window._screen = screen
    Window._blurFrame = BlurFrame
    Window._outline = Outline
    Window._mainFrame = MainFrame
    Window._sidebar = Sidebar
    Window._tabsContainer = TabsContainer
    Window._pagesContainer = PagesContainer
    Window._titleLabel = MainTitle
    Window._subtitleLabel = Subtitle
    Window._minimizedTaskbar = MinimizedTaskbar

    -- Dragging functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil

    local function updateDrag(input)
        if dragging then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                   startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            TweenService:Create(Outline, THEME.FastTween, {Position = newPos}):Play()
        end
    end

    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Outline.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            updateDrag(input)
        end
    end)

    -- Window visibility toggle with proper locking
    local isVisible = false
    
    local function setVisibility(visible)
        isVisible = visible
        BlurFrame.Visible = visible
        
        if visible then
            -- Animate window opening
            Outline.Size = UDim2.new(0, 0, 0, 0)
            TweenService:Create(Outline, THEME.SlowTween, {
                Size = THEME.WindowSize
            }):Play()
        else
            -- Animate window closing
            TweenService:Create(Outline, THEME.MediumTween, {
                Size = UDim2.new(0, 0, 0, 0)
            }):Play()
            
            task.wait(0.25)
            if not isVisible then
                BlurFrame.Visible = false
            end
        end
    end

    -- Show/Hide functions that respect the lock
    function Window:Show()
        if Window._locked then return end
        if isVisible then return end
        Window._minimized = false
        MinimizedTaskbar.Visible = false
        setVisibility(true)
        createNotification("UI Shown", "User interface is now visible", 3, "info")
        -- Load script cards on first show
        if not Window._cardsLoaded then
            Window:LoadScriptCards()
            Window._cardsLoaded = true
        end
    end

    function Window:Hide()
        if not isVisible then return end
        Window._minimized = false
        MinimizedTaskbar.Visible = false
        setVisibility(false)
        createNotification("UI Hidden", "User interface is now hidden", 3, "info")
    end

    function Window:Minimize()
        if not isVisible then return end
        Window._minimized = true
        setVisibility(false)
        MinimizedTaskbar.Visible = true
        createNotification("UI Minimized", "User interface minimized to taskbar", 3, "info")
    end

    function Window:Maximize()
        if not Window._minimized then return end
        Window._minimized = false
        MinimizedTaskbar.Visible = false
        setVisibility(true)
        createNotification("UI Maximized", "User interface restored from taskbar", 3, "info")
    end

    -- Keybind listener that ignores presses while locked
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Window._uiKey then
            if Window._locked then return end -- ignore until unlocked
            if Window._minimized then
                Window:Maximize()
            elseif isVisible then
                Window:Hide()
            else
                Window:Show()
            end
        end
    end)

    -- Button click handlers
    MinimizeButton.MouseButton1Click:Connect(function()
        Window:Minimize()
    end)

    ExpandButton.MouseButton1Click:Connect(function()
        Window:Maximize()
    end)

    TaskbarCloseButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)

    CloseButton.MouseButton1Click:Connect(function()
        ConfirmationPopup.Visible = true
        -- Animate popup appearance
        ConfirmationPopup.Size = UDim2.new(0, 0, 0, 0)
        TweenService:Create(ConfirmationPopup, THEME.MediumTween, {
            Size = UDim2.new(0, 400, 0, 200)
        }):Play()
    end)

    -- Yes button closes the entire UI
    YesButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)

    -- FIXED: No button with proper fade animation
    NoButton.MouseButton1Click:Connect(function()
        -- Fade all popup elements simultaneously
        local fadeOutTweens = {}
        
        for _, child in pairs(ConfirmationPopup:GetChildren()) do
            if child:IsA("GuiObject") then
                local fadeProps = {BackgroundTransparency = 1}
                if child:IsA("TextLabel") or child:IsA("TextButton") then
                    fadeProps.TextTransparency = 1
                end
                table.insert(fadeOutTweens, TweenService:Create(child, THEME.FastTween, fadeProps))
            end
        end
        
        -- Fade popup background
        table.insert(fadeOutTweens, TweenService:Create(ConfirmationPopup, THEME.FastTween, {BackgroundTransparency = 1}))
        
        -- Play all fade tweens
        for _, tween in pairs(fadeOutTweens) do
            tween:Play()
        end
        
        wait(0.2)
        ConfirmationPopup.Visible = false
        
        -- Reset all transparencies
        for _, child in pairs(ConfirmationPopup:GetChildren()) do
            if child:IsA("GuiObject") then
                child.BackgroundTransparency = 0
                if child:IsA("TextLabel") or child:IsA("TextButton") then
                    child.TextTransparency = 0
                end
            end
        end
        ConfirmationPopup.BackgroundTransparency = 0
    end)

    -- Tab creation and management
    function Window:CreateTab(name, icon, layoutOrder)
        local tab = {
            Name = name,
            Icon = icon or "",
            LayoutOrder = layoutOrder or (#Window._tabs + 1),
            Active = false
        }

        -- Tab button
        local TabButton = new("TextButton", {
            Name = name .. "_TabButton",
            Size = UDim2.new(1, 0, 0, 48),
            BackgroundColor3 = Color3.fromRGB(0, 0, 0),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            Text = "",
            AutoButtonColor = false,
            LayoutOrder = tab.LayoutOrder,
            ZIndex = 1000003
        })
        TabButton.Parent = TabsContainer
        
        local tabCorner = new("UICorner")
        tabCorner.CornerRadius = THEME.SmallCornerRadius
        tabCorner.Parent = TabButton

        -- Tab icon
        local TabIcon = new("ImageLabel", {
            Name = "TabIcon",
            Position = UDim2.new(0, 16, 0.5, -10),
            Size = UDim2.new(0, 20, 0, 20),
            BackgroundTransparency = 1,
            Image = tab.Icon,
            ImageColor3 = THEME.TextMuted,
            ScaleType = Enum.ScaleType.Fit,
            ZIndex = 1000004
        })
        TabIcon.Parent = TabButton

        -- FIXED: Tab text - removed duplicate name
        local TabText = new("TextLabel", {
            Name = "TabText",
            Position = UDim2.new(0, 48, 0, 0),
            Size = UDim2.new(1, -60, 1, 0),
            BackgroundTransparency = 1,
            Text = name, -- FIXED: Single name instead of duplicate
            Font = Enum.Font.GothamSemibold,
            TextSize = 15,
            TextColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left,
            ZIndex = 1000004
        })
        TabText.Parent = TabButton

        -- Active indicator
        local ActiveIndicator = new("Frame", {
            Name = "ActiveIndicator",
            Position = UDim2.new(0, 0, 0.5, -12),
            Size = UDim2.new(0, 3, 0, 24),
            BackgroundColor3 = Window._accent,
            BorderSizePixel = 0,
            Visible = false,
            ZIndex = 1000004
        })
        ActiveIndicator.Parent = TabButton
        
        local indicatorCorner = new("UICorner")
        indicatorCorner.CornerRadius = UDim.new(0, 2)
        indicatorCorner.Parent = ActiveIndicator

        -- Tab page with scrolling
        local TabPage = new("ScrollingFrame", {
            Name = name .. "_Page",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            ScrollBarThickness = 6,
            ScrollBarImageColor3 = THEME.Primary,
            CanvasSize = UDim2.new(0, 0, 0, 0),
            AutomaticCanvasSize = Enum.AutomaticSize.Y,
            Visible = false,
            ZIndex = 1000003
        })
        TabPage.Parent = PagesContainer

        -- Add layout and padding to tab page
        local pageLayout = new("UIListLayout")
        pageLayout.Parent = TabPage
        pageLayout.Padding = UDim.new(0, 8)
        pageLayout.SortOrder = Enum.SortOrder.LayoutOrder

        local pagePadding = new("UIPadding")
        pagePadding.Parent = TabPage
        pagePadding.PaddingAll = UDim.new(0, 15)

        -- Tab functions
        function tab:Show()
            -- Hide all other tabs
            for _, otherTab in pairs(Window._tabs) do
                if otherTab ~= tab then
                    otherTab:Hide()
                end
            end
            
            -- Show this tab
            tab.Active = true
            Window._currentTab = tab
            
            -- Animate tab appearance
            TabPage.Position = UDim2.new(1, 0, 0, 0)
            TabPage.Visible = true
            
            TweenService:Create(TabPage, THEME.MediumTween, {
                Position = UDim2.new(0, 0, 0, 0)
            }):Play()
            
            -- Update button appearance
            TweenService:Create(TabButton, THEME.FastTween, {
                BackgroundTransparency = 0,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255):lerp(Window._accent, 0.9)
            }):Play()
            TweenService:Create(TabText, THEME.FastTween, {TextColor3 = THEME.Text}):Play()
            TweenService:Create(TabIcon, THEME.FastTween, {ImageColor3 = Window._accent}):Play()
            ActiveIndicator.Visible = true
        end
        
        function tab:Hide()
            tab.Active = false
            
            -- Animate tab disappearance
            if TabPage.Visible then
                TweenService:Create(TabPage, THEME.FastTween, {
                    Position = UDim2.new(-1, 0, 0, 0)
                }):Play()
                
                task.wait(0.15)
                TabPage.Visible = false
                TabPage.Position = UDim2.new(0, 0, 0, 0)
            end
            
            -- Reset button appearance
            TweenService:Create(TabButton, THEME.FastTween, {
                BackgroundTransparency = 1
            }):Play()
            TweenService:Create(TabText, THEME.FastTween, {TextColor3 = THEME.TextMuted}):Play()
            TweenService:Create(TabIcon, THEME.FastTween, {ImageColor3 = THEME.TextMuted}):Play()
            ActiveIndicator.Visible = false
        end

        -- UI Library Functions for Tab Content
        function tab:CreateSection(title)
            local section = new("TextLabel", {
                Name = "Section_" .. title,
                Size = UDim2.new(1, 0, 0, 30),
                BackgroundTransparency = 1,
                Text = title,
                Font = Enum.Font.GothamBold,
                TextSize = 16,
                TextColor3 = Window._accent,
                TextXAlignment = Enum.TextXAlignment.Left,
                LayoutOrder = #TabPage:GetChildren(),
                ZIndex = 1000004
            })
            section.Parent = TabPage
            return section
        end

        function tab:CreateLabel(text, textSize)
            local label = new("TextLabel", {
                Name = "Label_" .. tostring(#TabPage:GetChildren()),
                Size = UDim2.new(1, 0, 0, textSize and (textSize + 10) or 25),
                BackgroundTransparency = 1,
                Text = text or "Label",
                Font = Enum.Font.Gotham,
                TextSize = textSize or 14,
                TextColor3 = THEME.Text,
                TextXAlignment = Enum.TextXAlignment.Left,
                TextYAlignment = Enum.TextYAlignment.Center,
                TextWrapped = true,
                LayoutOrder = #TabPage:GetChildren(),
                ZIndex = 1000004
            })
            label.Parent = TabPage
            return label
        end

        function tab:CreateButton(text, callback)
            local button = new("TextButton", {
                Name = "Button_" .. tostring(#TabPage:GetChildren()),
                Size = UDim2.new(1, 0, 0, 40),
                BackgroundColor3 = Window._accent,
                BorderSizePixel = 0,
                Text = text or "Button",
                Font = Enum.Font.GothamSemibold,
                TextSize = 14,
                TextColor3 = THEME.Text,
                AutoButtonColor = false,
                LayoutOrder = #TabPage:GetChildren(),
                ZIndex = 1000004
            })
            button.Parent = TabPage
            
            local corner = new("UICorner")
            corner.CornerRadius = THEME.SmallCornerRadius
            corner.Parent = button

            -- Hover effects
            button.MouseEnter:Connect(function()
                TweenService:Create(button, THEME.FastTween, {
                    BackgroundColor3 = button.BackgroundColor3:lerp(Color3.new(1,1,1), 0.1)
                }):Play()
            end)
            
            button.MouseLeave:Connect(function()
                TweenService:Create(button, THEME.FastTween, {
                    BackgroundColor3 = Window._accent
                }):Play()
            end)

            if callback then
                button.MouseButton1Click:Connect(callback)
            end

            return button
        end

        function tab:CreateToggle(text, default, callback)
            local toggleFrame = new("Frame", {
                Name = "Toggle_" .. tostring(#TabPage:GetChildren()),
                Size = UDim2.new(1, 0, 0, 40),
                BackgroundColor3 = THEME.Card,
                BorderSizePixel = 0,
                LayoutOrder = #TabPage:GetChildren(),
                ZIndex = 1000004
            })
            toggleFrame.Parent = TabPage
            
            local toggleCorner = new("UICorner")
            toggleCorner.CornerRadius = THEME.SmallCornerRadius
            toggleCorner.Parent = toggleFrame

            local toggleLabel = new("TextLabel", {
                Position = UDim2.new(0, 15, 0, 0),
                Size = UDim2.new(1, -80, 1, 0),
                BackgroundTransparency = 1,
                Text = text or "Toggle",
                Font = Enum.Font.GothamSemibold,
                TextSize = 14,
                TextColor3 = THEME.Text,
                TextXAlignment = Enum.TextXAlignment.Left,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 1000005
            })
            toggleLabel.Parent = toggleFrame

            local toggleButton = new("TextButton", {
                Position = UDim2.new(1, -55, 0.5, -10),
                Size = UDim2.new(0, 40, 0, 20),
                BackgroundColor3 = default and THEME.Success or THEME.Surface,
                BorderSizePixel = 0,
                Text = "",
                AutoButtonColor = false,
                ZIndex = 1000005
            })
            toggleButton.Parent = toggleFrame
            
            local toggleButtonCorner = new("UICorner")
            toggleButtonCorner.CornerRadius = UDim.new(0, 10)
            toggleButtonCorner.Parent = toggleButton

            local toggleIndicator = new("Frame", {
                Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8),
                Size = UDim2.new(0, 16, 0, 16),
                BackgroundColor3 = THEME.Text,
                BorderSizePixel = 0,
                ZIndex = 1000006
            })
            toggleIndicator.Parent = toggleButton
            
            local indicatorCorner = new("UICorner")
            indicatorCorner.CornerRadius = UDim.new(0, 8)
            indicatorCorner.Parent = toggleIndicator

            local isToggled = default or false

            local function updateToggle()
                TweenService:Create(toggleButton, THEME.FastTween, {
                    BackgroundColor3 = isToggled and THEME.Success or THEME.Surface
                }):Play()
                TweenService:Create(toggleIndicator, THEME.FastTween, {
                    Position = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
                }):Play()
            end

            toggleButton.MouseButton1Click:Connect(function()
                isToggled = not isToggled
                updateToggle()
                if callback then
                    callback(isToggled)
                end
            end)

            local function getToggleState()
                return isToggled
            end

            return toggleFrame, getToggleState
        end

        function tab:CreateTextBox(placeholder, callback)
            local textboxFrame = new("Frame", {
                Name = "TextBox_" .. tostring(#TabPage:GetChildren()),
                Size = UDim2.new(1, 0, 0, 40),
                BackgroundColor3 = THEME.Card,
                BorderSizePixel = 0,
                LayoutOrder = #TabPage:GetChildren(),
                ZIndex = 1000004
            })
            textboxFrame.Parent = TabPage
            
            local textboxCorner = new("UICorner")
            textboxCorner.CornerRadius = THEME.SmallCornerRadius
            textboxCorner.Parent = textboxFrame

            local textbox = new("TextBox", {
                Position = UDim2.new(0, 15, 0, 0),
                Size = UDim2.new(1, -30, 1, 0),
                BackgroundTransparency = 1,
                PlaceholderText = placeholder or "Enter text...",
                PlaceholderColor3 = THEME.TextMuted,
                Text = "",
                Font = Enum.Font.Gotham,
                TextSize = 14,
                TextColor3 = THEME.Text,
                TextXAlignment = Enum.TextXAlignment.Left,
                ClearTextOnFocus = false,
                ZIndex = 1000005
            })
            textbox.Parent = textboxFrame

            if callback then
                textbox.FocusLost:Connect(function(enterPressed)
                    callback(textbox.Text, enterPressed)
                end)
            end

            return textbox
        end

        function tab:CreateKeybind(text, defaultKey, callback)
            local keybindFrame = new("Frame", {
                Name = "Keybind_" .. tostring(#TabPage:GetChildren()),
                Size = UDim2.new(1, 0, 0, 40),
                BackgroundColor3 = THEME.Card,
                BorderSizePixel = 0,
                LayoutOrder = #TabPage:GetChildren(),
                ZIndex = 1000004
            })
            keybindFrame.Parent = TabPage
            
            local keybindCorner = new("UICorner")
            keybindCorner.CornerRadius = THEME.SmallCornerRadius
            keybindCorner.Parent = keybindFrame

            local keybindLabel = new("TextLabel", {
                Position = UDim2.new(0, 15, 0, 0),
                Size = UDim2.new(1, -120, 1, 0),
                BackgroundTransparency = 1,
                Text = text or "Keybind",
                Font = Enum.Font.GothamSemibold,
                TextSize = 14,
                TextColor3 = THEME.Text,
                TextXAlignment = Enum.TextXAlignment.Left,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 1000005
            })
            keybindLabel.Parent = keybindFrame

            local keybindButton = new("TextButton", {
                Position = UDim2.new(1, -100, 0.5, -15),
                Size = UDim2.new(0, 85, 0, 30),
                BackgroundColor3 = THEME.Surface,
                BorderSizePixel = 0,
                Text = tostring(defaultKey):gsub("Enum.KeyCode.", ""),
                Font = Enum.Font.Gotham,
                TextSize = 12,
                TextColor3 = THEME.Text,
                AutoButtonColor = false,
                ZIndex = 1000005
            })
            keybindButton.Parent = keybindFrame
            
            local keybindButtonCorner = new("UICorner")
            keybindButtonCorner.CornerRadius = UDim.new(0, 6)
            keybindButtonCorner.Parent = keybindButton

            local currentKey = defaultKey
            local isBinding = false

            keybindButton.MouseButton1Click:Connect(function()
                if not isBinding then
                    isBinding = true
                    keybindButton.Text = "..."
                    keybindButton.TextColor3 = Window._accent
                    
                    local connection
                    connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                        if gameProcessed then return end
                        if input.UserInputType == Enum.UserInputType.Keyboard then
                            local newKey = input.KeyCode
                            currentKey = newKey
                            keybindButton.Text = tostring(newKey):gsub("Enum.KeyCode.", "")
                            keybindButton.TextColor3 = THEME.Text
                            
                            if callback then
                                callback(newKey)
                            end
                            
                            connection:Disconnect()
                            isBinding = false
                        end
                    end)
                end
            end)

            local function getKeybind()
                return currentKey
            end

            return keybindFrame, getKeybind
        end

        -- Button hover effects
        TabButton.MouseEnter:Connect(function()
            if not tab.Active then
                TweenService:Create(TabButton, THEME.FastTween, {
                    BackgroundTransparency = 0.95,
                    BackgroundColor3 = THEME.TextMuted
                }):Play()
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if not tab.Active then
                TweenService:Create(TabButton, THEME.FastTween, {
                    BackgroundTransparency = 1
                }):Play()
            end
        end)

        TabButton.MouseButton1Click:Connect(function()
            tab:Show()
        end)

        -- Store references
        tab.Button = TabButton
        tab.Page = TabPage
        tab.Icon = TabIcon
        tab.Text = TabText

        Window._tabs[#Window._tabs + 1] = tab
        return tab
    end

    function Window:Destroy()
        -- Clear active notifications to prevent them from showing after UI destruction
        for i = #ActiveNotifications, 1, -1 do
            local notif = ActiveNotifications[i]
            if notif and notif.Parent then
                notif:Destroy()
            end
            table.remove(ActiveNotifications, i)
        end
        
        if screen and screen.Parent then
            screen:Destroy()
        end
    end

    -- Database helper function
    local function DB()
        return Window._scriptDatabase or SCRIPT_DATABASE
    end

    -- Fixed GitHub URL placeholder and improved error handling
    -- Replaced GitHub loading with embedded script database
    local SCRIPT_DATABASE = {
        [301549746] = { -- Counter Blox
            gameName = "Counter Blox",
            scripts = {
                {title = "Lynk CB", description = "Advanced Counter Blox script", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkcb/refs/heads/main/counterblox"))()', RequiresKey = true}
            }
        },
        [9791603388] = { -- Underground War 2.0
            gameName = "Underground War 2.0",
            scripts = {
                {title = "Silent Aim Fixed", description = "Silent aim for Underground War", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/WITHERCC/refs/heads/main/un"))()', RequiresKey = false}
            }
        },
        ["Universal"] = {
            gameName = "Universal Scripts",
            scripts = {
                {title = "Infinite Yield", description = "Admin commands for any game", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()', RequiresKey = false},
                {title = "Fly Script", description = "Universal fly with speed control", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkUI/refs/heads/main/fly.lua"))()', RequiresKey = false},
                {title = "Noclip", description = "Walk through walls", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkUI/refs/heads/main/noclip.lua"))()', RequiresKey = false},
                {title = "Universal Fly", description = "Universal fly script", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/WITHERCC/refs/heads/main/universal%20fly"))()', RequiresKey = false}
            }
        }
    }

    local function getCurrentPlaceId()
        return game.PlaceId
    end

    -- Modified script card creation to use loadstrings and add click handler for sidebar
    -- Added script sidebar system
    function Window:CreateScriptSidebar()
        -- Sidebar container (initially hidden off-screen)
        local ScriptSidebar = new("Frame", {
            Name = "ScriptSidebar",
            Position = UDim2.new(1, 0, 0, 0),
            Size = UDim2.new(0, 350, 1, 0),
            BackgroundColor3 = THEME.Surface,
            BorderSizePixel = 0,
            ZIndex = 1000100
        })
        ScriptSidebar.Parent = MainFrame
        
        local sidebarCorner = new("UICorner")
        sidebarCorner.CornerRadius = THEME.CornerRadius
        sidebarCorner.Parent = ScriptSidebar
        
        -- Sidebar gradient
        createGradient(ScriptSidebar, {
            ColorSequenceKeypoint.new(0, THEME.Surface),
            ColorSequenceKeypoint.new(1, THEME.Panel)
        }, 90)

        -- Return button (changed from close button)
        local ReturnButton = new("TextButton", {
            Name = "ReturnButton",
            Position = UDim2.new(0, 10, 0, 10),
            Size = UDim2.new(0, 80, 0, 35),
            BackgroundColor3 = THEME.Primary,
            BorderSizePixel = 0,
            Text = "‚Üê Return",
            Font = Enum.Font.GothamBold,
            TextSize = 14,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            ZIndex = 1000101
        })
        ReturnButton.Parent = ScriptSidebar
        
        local returnCorner = new("UICorner")
        returnCorner.CornerRadius = UDim.new(0, 8)
        returnCorner.Parent = ReturnButton
        
        -- Content container
        local ContentContainer = new("ScrollingFrame", {
            Name = "ContentContainer",
            Position = UDim2.new(0, 20, 0, 60),
            Size = UDim2.new(1, -40, 1, -80),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            ScrollBarThickness = 6,
            ScrollBarImageColor3 = THEME.Primary,
            CanvasSize = UDim2.new(0, 0, 0, 0),
            AutomaticCanvasSize = Enum.AutomaticSize.Y,
            ZIndex = 1000101
        })
        ContentContainer.Parent = ScriptSidebar
        
        local contentLayout = new("UIListLayout")
        contentLayout.Parent = ContentContainer
        contentLayout.Padding = UDim.new(0, 15)
        contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        -- Store references
        Window._scriptSidebar = ScriptSidebar
        Window._sidebarContent = ContentContainer
        Window._sidebarReturnButton = ReturnButton
        
        -- Return button functionality
        ReturnButton.MouseButton1Click:Connect(function()
            Window:CloseScriptSidebar()
        end)
        
        return ScriptSidebar
    end

    -- Added function to open sidebar with script details
    function Window:OpenScriptSidebar(gameData, script)
        if not Window._scriptSidebar then
            Window:CreateScriptSidebar()
        end
        
        -- Make sidebar visible again when opening
        Window._scriptSidebar.Visible = true
        
        -- Clear existing content
        for _, child in pairs(Window._sidebarContent:GetChildren()) do
            if child:IsA("GuiObject") then
                child:Destroy()
            end
        end
        
        local placeId = gameData.placeId or "Universal"
        
        -- Game thumbnail (larger version)
        local ThumbnailContainer = new("Frame", {
            Name = "SidebarThumbnail",
            Size = UDim2.new(1, 0, 0, 180),
            BackgroundColor3 = THEME.Card,
            BorderSizePixel = 0,
            LayoutOrder = 1,
            ZIndex = 1000102
        })
        ThumbnailContainer.Parent = Window._sidebarContent
        
        local thumbCorner = new("UICorner")
        thumbCorner.CornerRadius = THEME.SmallCornerRadius
        thumbCorner.Parent = ThumbnailContainer
        
        local GameThumbnail = new("ImageLabel", {
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = placeId ~= "Universal" and string.format("https://www.roblox.com/asset-thumbnail/image?assetId=%d&width=768&height=432&format=png", placeId) or "rbxassetid://83202805728510",
            ScaleType = Enum.ScaleType.Crop,
            ZIndex = 1000102
        })
        GameThumbnail.Parent = ThumbnailContainer
        
        local imageCorner = new("UICorner")
        imageCorner.CornerRadius = THEME.SmallCornerRadius
        imageCorner.Parent = GameThumbnail
        
        -- Universal placeholder
        if placeId == "Universal" then
            local UniversalIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = EMOJIS.GLOBE,
                Font = Enum.Font.GothamBold,
                TextSize = 64,
                TextColor3 = THEME.Primary,
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 1000103
            })
            UniversalIcon.Parent = ThumbnailContainer
        end
        
        -- FIXED: Key indicator (if needed)
        if script.RequiresKey == true then
            local KeyIndicator = new("Frame", {
                Position = UDim2.new(1, -35, 0, 10),
                Size = UDim2.new(0, 25, 0, 25),
                BackgroundColor3 = Color3.fromRGB(255, 193, 7),
                BorderSizePixel = 0,
                ZIndex = 1000103
            })
            KeyIndicator.Parent = ThumbnailContainer
            
            local keyCorner = new("UICorner")
            keyCorner.CornerRadius = UDim.new(0.5, 0)
            keyCorner.Parent = KeyIndicator
            
            local KeyIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = EMOJIS.KEY,
                Font = Enum.Font.GothamBold,
                TextSize = 14,
                TextColor3 = Color3.fromRGB(0, 0, 0),
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 1000104
            })
            KeyIcon.Parent = KeyIndicator
        end
        
        -- Game name
        local GameNameLabel = new("TextLabel", {
            Name = "SidebarGameName",
            Size = UDim2.new(1, 0, 0, 20),
            BackgroundTransparency = 1,
            Text = gameData.gameName,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left,
            LayoutOrder = 2,
            ZIndex = 1000102
        })
        GameNameLabel.Parent = Window._sidebarContent
        

        -- Script name (large and bold)
        local ScriptNameLabel = new("TextLabel", {
            Name = "SidebarScriptName",
            Size = UDim2.new(1, 0, 0, 30),
            BackgroundTransparency = 1,
            Text = script.Title or script.title or "Unknown Script",
            Font = Enum.Font.GothamBold,
            TextSize = 20,
            TextColor3 = THEME.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            LayoutOrder = 3,
            ZIndex = 1000102
        })
        ScriptNameLabel.Parent = Window._sidebarContent
        
        -- Description (if available)
        if script.Description or script.description then
            local DescriptionLabel = new("TextLabel", {
                Name = "SidebarDescription",
                Size = UDim2.new(1, 0, 0, 0),
                BackgroundTransparency = 1,
                Text = script.Description or script.description,
                Font = Enum.Font.Gotham,
                TextSize = 13,
                TextColor3 = THEME.TextMuted,
                TextXAlignment = Enum.TextXAlignment.Left,
                TextYAlignment = Enum.TextYAlignment.Top,
                TextWrapped = true,
                AutomaticSize = Enum.AutomaticSize.Y,
                LayoutOrder = 4,
                ZIndex = 1000102
            })
            DescriptionLabel.Parent = Window._sidebarContent
        end
        
        -- Execute button (large and prominent)
        local ExecuteButton = new("TextButton", {
            Name = "SidebarExecuteButton",
            Size = UDim2.new(1, 0, 0, 50),
            BackgroundColor3 = Color3.fromRGB(34, 197, 94),
            BorderSizePixel = 0,
            Text = "Execute Script",
            Font = Enum.Font.GothamBold,
            TextSize = 16,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            AutoButtonColor = false,
            LayoutOrder = 5,
            ZIndex = 1000102
        })
        ExecuteButton.Parent = Window._sidebarContent
        
        local executeCorner = new("UICorner")
        executeCorner.CornerRadius = THEME.SmallCornerRadius
        executeCorner.Parent = ExecuteButton
        
        -- Execute button functionality
        ExecuteButton.MouseButton1Click:Connect(function()
            ExecuteButton.Text = "Executing..."
            ExecuteButton.BackgroundColor3 = THEME.TextMuted
            
            spawn(function()
                local success, result = pcall(function()
                    -- Updated to support both url and LoadString formats
                    if script.url then
                        -- New format: load script from URL
                        loadstring(game:HttpGet(script.url))()
                    elseif script.LoadString then
                        -- Legacy format: execute embedded LoadString
                        loadstring(script.LoadString)()
                    else
                        error("No valid script entry found (url or LoadString missing)")
                    end
                end)
                
                wait(1)
                
                if success then
                    ExecuteButton.Text = "Executed Successfully " .. EMOJIS.SUCCESS
                    ExecuteButton.BackgroundColor3 = Color3.fromRGB(34, 197, 94)
                    createNotification("Script Executed", "Script ran successfully", 4, "success")
                else
                    ExecuteButton.Text = "Execution Failed " .. EMOJIS.CLOSE
                    ExecuteButton.BackgroundColor3 = Color3.fromRGB(239, 68, 68)
                    createNotification("Execution Failed", "Script failed to run", 4, "error")
                    warn("‚ùå Script execution failed:", result)
                end
                
                wait(3)
                ExecuteButton.Text = "Execute Script"
                ExecuteButton.BackgroundColor3 = Color3.fromRGB(34, 197, 94)
            end)
        end)

        
        -- Animate sidebar in
        TweenService:Create(Window._scriptSidebar, THEME.MediumTween, {
            Position = UDim2.new(1, -350, 0, 0)
        }):Play()
    end


    -- Updated close sidebar function to properly hide the sidebar
    function Window:CloseScriptSidebar()
        if Window._scriptSidebar then
            -- Hide sidebar completely instead of moving to side
            local closeTween = TweenService:Create(Window._scriptSidebar, THEME.MediumTween, {
                Position = UDim2.new(1, 0, 0, 0),
                Visible = false
            })
            closeTween:Play()
            
            -- Clear sidebar content after animation
            closeTween.Completed:Connect(function()
                if Window._sidebarContent then
                    for _, child in pairs(Window._sidebarContent:GetChildren()) do
                        if child:IsA("GuiObject") then
                            child:Destroy()
                        end
                    end
                end
            end)
        end
    end

    local function createScriptCard(parent, gameData, script, position)
        local placeId = gameData.placeId or "Universal"
        
        -- Card container
        local Card = new("Frame", {
            Name = "ScriptCard",
            Size = UDim2.new(0, 240, 0, 180),
            BackgroundColor3 = THEME.Card,
            BorderSizePixel = 0,
            ZIndex = 1000004
        })
        Card.Parent = parent
        
        local cardCorner = new("UICorner")
        cardCorner.CornerRadius = THEME.SmallCornerRadius
        cardCorner.Parent = Card
        
        -- Card shadow/glow effect
        createGlow(Card, THEME.Primary, 0.8)
        
        -- Game thumbnail
        local ThumbnailContainer = new("Frame", {
            Name = "ThumbnailContainer",
            Position = UDim2.new(0, 8, 0, 8),
            Size = UDim2.new(1, -16, 0, 120),
            BackgroundColor3 = THEME.Surface,
            BorderSizePixel = 0,
            ZIndex = 1000005
        })
        ThumbnailContainer.Parent = Card
        
        local thumbCorner = new("UICorner")
        thumbCorner.CornerRadius = THEME.SmallCornerRadius
        thumbCorner.Parent = ThumbnailContainer
        
        -- Game thumbnail image
        local GameThumbnail = new("ImageLabel", {
            Name = "GameThumbnail",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = placeId ~= "Universal" and string.format("https://www.roblox.com/asset-thumbnail/image?assetId=%d&width=768&height=432&format=png", placeId) or "rbxassetid://83202805728510",
            ScaleType = Enum.ScaleType.Crop,
            ZIndex = 1000005
        })
        GameThumbnail.Parent = ThumbnailContainer
        
        local imageCorner = new("UICorner")
        imageCorner.CornerRadius = THEME.SmallCornerRadius
        imageCorner.Parent = GameThumbnail
        
        -- Universal scripts placeholder
        if placeId == "Universal" then
            local UniversalIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = EMOJIS.GLOBE,
                Font = Enum.Font.GothamBold,
                TextSize = 48,
                TextColor3 = THEME.Primary,
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 1000006
            })
            UniversalIcon.Parent = ThumbnailContainer
        end
        
        -- FIXED: Key system indicator
        if script.RequiresKey == true then
            local KeyIndicator = new("Frame", {
                Name = "KeyIndicator",
                Position = UDim2.new(1, -30, 0, 8),
                Size = UDim2.new(0, 22, 0, 22),
                BackgroundColor3 = Color3.fromRGB(255, 193, 7),
                BorderSizePixel = 0,
                ZIndex = 1000006
            })
            KeyIndicator.Parent = ThumbnailContainer
            
            local keyCorner = new("UICorner")
            keyCorner.CornerRadius = UDim.new(0.5, 0)
            keyCorner.Parent = KeyIndicator
            
            local KeyIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = EMOJIS.KEY,
                Font = Enum.Font.GothamBold,
                TextSize = 12,
                TextColor3 = Color3.fromRGB(0, 0, 0),
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 1000007
            })
            KeyIcon.Parent = KeyIndicator
        end
        
        -- Game name
        local GameName = new("TextLabel", {
            Name = "GameName",
            Position = UDim2.new(0, 12, 0, 135),
            Size = UDim2.new(1, -24, 0, 16),
            BackgroundTransparency = 1,
            Text = gameData.gameName,
            Font = Enum.Font.Gotham,
            TextSize = 12,
            TextColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextTruncate = Enum.TextTruncate.AtEnd,
            ZIndex = 1000005
        })
        GameName.Parent = Card
        
        -- Script name (bigger and bolder)
        local ScriptName = new("TextLabel", {
            Name = "ScriptName",
            Position = UDim2.new(0, 12, 0, 152),
            Size = UDim2.new(1, -24, 0, 20),
            BackgroundTransparency = 1,
            Text = script.Title or script.title,
            Font = Enum.Font.GothamBold,
            TextSize = 16,
            TextColor3 = THEME.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextTruncate = Enum.TextTruncate.AtEnd,
            ZIndex = 1000005
        })
        ScriptName.Parent = Card
        
        -- Added click handler to open sidebar instead of direct execute button
        local ClickButton = new("TextButton", {
            Name = "ClickButton",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Text = "",
            ZIndex = 1000010
        })
        ClickButton.Parent = Card
        
        -- Card click functionality to open sidebar
        ClickButton.MouseButton1Click:Connect(function()
            Window:OpenScriptSidebar(gameData, script)
        end)
        
        -- Hover effects
        ClickButton.MouseEnter:Connect(function()
            TweenService:Create(Card, THEME.FastTween, {
                BackgroundColor3 = THEME.Surface
            }):Play()
        end)
        
        ClickButton.MouseLeave:Connect(function()
            TweenService:Create(Card, THEME.FastTween, {
                BackgroundColor3 = THEME.Card
            }):Play()
        end)
        
        return Card
    end

    local function populateHomeTab(homeTab)
        -- Clear existing content
        for _, child in pairs(homeTab:GetChildren()) do
            if child:IsA("GuiObject") and child.Name ~= "UIListLayout" and child.Name ~= "UIPadding" then
                child:Destroy()
            end
        end
        
        -- Create search bar manually using TextBox
        local searchFrame = new("Frame", {
            Name = "SearchFrame",
            Size = UDim2.new(1, 0, 0, 40),
            BackgroundColor3 = Color3.fromRGB(40, 40, 40),
            BorderSizePixel = 0,
            LayoutOrder = 1,
            ZIndex = 1000004
        })
        searchFrame.Parent = homeTab
        
        local searchCorner = new("UICorner")
        searchCorner.CornerRadius = UDim.new(0, 8)
        searchCorner.Parent = searchFrame
        
        local searchBox = new("TextBox", {
            Name = "SearchBox",
            Position = UDim2.new(0, 15, 0, 0),
            Size = UDim2.new(1, -30, 1, 0),
            BackgroundTransparency = 1,
            Text = "",
            PlaceholderText = EMOJIS.SEARCH .. " Search scripts...",
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextColor3 = THEME.Text,
            PlaceholderColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left,
            ClearTextOnFocus = false,
            ZIndex = 1000005
        })
        searchBox.Parent = searchFrame
        
        -- Create scroll frame for script cards after search bar
        local ScrollFrame = new("ScrollingFrame", {
            Name = "ScriptScrollFrame",
            Size = UDim2.new(1, 0, 1, -50),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            ScrollBarThickness = 6,
            ScrollBarImageColor3 = THEME.Primary,
            CanvasSize = UDim2.new(0, 0, 0, 0),
            AutomaticCanvasSize = Enum.AutomaticSize.Y,
            LayoutOrder = 2,
            ZIndex = 1000004
        })
        ScrollFrame.Parent = homeTab
        
        -- Add search functionality
        searchBox.Changed:Connect(function(property)
            if property == "Text" then
                local searchText = searchBox.Text
                local visibleCount = 0
                local totalCards = 0
                
                for _, card in pairs(ScrollFrame:GetChildren()) do
                    if card:IsA("Frame") and card.Name ~= "UIGridLayout" and card.Name ~= "UIPadding" and card.Name ~= "NoMatchMessage" then
                        totalCards = totalCards + 1
                        local scriptNameLabel = card:FindFirstChild("ScriptName")
                        local gameNameLabel = card:FindFirstChild("GameName")
                        local visible = false
                        
                        if searchText == "" then
                            visible = true
                        else
                            local searchLower = searchText:lower()
                            
                            if scriptNameLabel and scriptNameLabel.Text:lower():find(searchLower) then
                                visible = true
                            end
                            
                            if gameNameLabel and gameNameLabel.Text:lower():find(searchLower) then
                                visible = true
                            end
                            
                            local keywords = card:GetAttribute("Keywords") or ""
                            if keywords:lower():find(searchLower) then
                                visible = true
                            end
                            
                            local description = card:GetAttribute("Description") or ""
                            if description:lower():find(searchLower) then
                                visible = true
                            end
                        end
                        
                        card.Visible = visible
                        if visible then
                            visibleCount = visibleCount + 1
                        end
                    end
                end
            end
        end)
        
        wait() -- Wait for frame to render and get proper size

        local actualWidth = ScrollFrame.AbsoluteSize.X > 0 and ScrollFrame.AbsoluteSize.X or 580
        local totalPadding = 30
        local cellWidth = math.floor((actualWidth - totalPadding) / 2)
        cellWidth = math.max(cellWidth, 220)
        
        local GridLayout = new("UIGridLayout", {
            CellSize = UDim2.new(0, cellWidth, 0, 180),
            CellPadding = UDim2.new(0, 10, 0, 15),
            HorizontalAlignment = Enum.HorizontalAlignment.Left,
            VerticalAlignment = Enum.VerticalAlignment.Top,
            SortOrder = Enum.SortOrder.LayoutOrder,
            FillDirection = Enum.FillDirection.Horizontal,
            StartCorner = Enum.StartCorner.TopLeft
        })
        GridLayout.Parent = ScrollFrame
        
        -- Add padding to scroll frame
        local Padding = new("UIPadding", {
            PaddingTop = UDim.new(0, 15),
            PaddingBottom = UDim.new(0, 15),
            PaddingLeft = UDim.new(0, 10),
            PaddingRight = UDim.new(0, 10)
        })
        Padding.Parent = ScrollFrame

        -- Get current game's scripts
        local currentPlaceId = getCurrentPlaceId()
        local currentGameData = DB()[currentPlaceId]
        
        local cardIndex = 0
        
        -- Add current game's scripts first (if available)
        if currentGameData then
            for _, script in pairs(currentGameData.scripts) do
                local card = createScriptCard(ScrollFrame, {
                    placeId = currentPlaceId,
                    gameName = currentGameData.gameName
                }, script)
                card.LayoutOrder = cardIndex
                card:SetAttribute("Keywords", script.keywords or "")
                card:SetAttribute("Description", script.description or "")
                cardIndex = cardIndex + 1
            end
        end
        
        -- Add universal scripts
        local universalData = DB()["Universal"]
        if universalData then
            for _, script in pairs(universalData.scripts) do
                local card = createScriptCard(ScrollFrame, {
                    placeId = "Universal",
                    gameName = universalData.gameName
                }, script)
                card.LayoutOrder = cardIndex
                card:SetAttribute("Keywords", script.keywords or "fly noclip speed universal movement")
                card:SetAttribute("Description", script.description or "")
                cardIndex = cardIndex + 1
            end
        end
        
        -- Add other games' scripts
        for placeId, gameData in pairs(DB()) do
            if placeId ~= currentPlaceId and placeId ~= "Universal" then
                for _, script in pairs(gameData.scripts) do
                    local card = createScriptCard(ScrollFrame, {
                        placeId = placeId,
                        gameName = gameData.gameName
                    }, script)
                    card.LayoutOrder = cardIndex
                    card:SetAttribute("Keywords", script.keywords or "")
                    card:SetAttribute("Description", script.description or "")
                    cardIndex = cardIndex + 1
                end
            end
        end
    end

    -- LoadScriptCards to populate all tabs with embedded content
    function Window:LoadScriptCards()
        -- Only create tabs if none exist yet
        if #Window._tabs == 0 then
            -- Create tabs with your specified icons and order
            local homeTab = Window:CreateTab("Home", "rbxassetid://10734950309", 1)
            populateHomeTab(homeTab.Page)
            
            local updatesTab = Window:CreateTab("Updates", "rbxassetid://7733674079", 2)
            -- Populate Updates tab
            updatesTab:CreateSection("Recent Updates")
            updatesTab:CreateLabel("Version 2.2.0 - Latest", 16)
            updatesTab:CreateLabel("‚Ä¢ Fixed emoji display after obfuscation")
            updatesTab:CreateLabel("‚Ä¢ Fixed notification toggle functionality")
            updatesTab:CreateLabel("‚Ä¢ Removed duplicate tab names")
            updatesTab:CreateLabel("‚Ä¢ Added Discord button to Credits")
            updatesTab:CreateLabel("‚Ä¢ Updated button colors to match theme")
            updatesTab:CreateLabel("‚Ä¢ Added mobile version support")
            updatesTab:CreateLabel("‚Ä¢ Improved notification sizing")
            updatesTab:CreateLabel("")
            updatesTab:CreateLabel("Version 2.1.0", 16)
            updatesTab:CreateLabel("‚Ä¢ Improved UI performance")
            updatesTab:CreateLabel("‚Ä¢ Added new script categories")
            updatesTab:CreateLabel("‚Ä¢ Enhanced search functionality")
            updatesTab:CreateLabel("‚Ä¢ Fixed key system integration")
            updatesTab:CreateLabel("‚Ä¢ Added minimize/maximize feature")
            
            local creditsTab = Window:CreateTab("Credits", "rbxassetid://7733955511", 3)
            -- Populate Credits tab
            creditsTab:CreateSection("LYNK Script Hub v2.2")
            creditsTab:CreateLabel("")
            -- FIXED: Added Discord button
            creditsTab:CreateButton("Join Discord", function()
                setclipboard("https://discord.gg/AzMbjqD7T3")
                createNotification("Discord Link Copied", "Discord invite copied to clipboard", 4, "success")
            end)
            creditsTab:CreateLabel("")
            creditsTab:CreateSection("Development Team")
            creditsTab:CreateLabel("‚Ä¢ @x_vvw - Lead Developer")
            creditsTab:CreateLabel("‚Ä¢ Script Hub Community")
            creditsTab:CreateLabel("")
            creditsTab:CreateSection("Features")
            creditsTab:CreateLabel("‚Ä¢ Modern GitHub integration")
            creditsTab:CreateLabel("‚Ä¢ Auto game detection")
            creditsTab:CreateLabel("‚Ä¢ Professional card layout")
            creditsTab:CreateLabel("‚Ä¢ Smart search system")
            creditsTab:CreateLabel("‚Ä¢ Mobile support")
            creditsTab:CreateLabel("‚Ä¢ Minimize/maximize functionality")
            creditsTab:CreateLabel("‚Ä¢ Notification system")

            local settingsTab = Window:CreateTab("Settings", "rbxassetid://10734950020", 4)
            -- Populate Settings tab
            settingsTab:CreateSection("UI Settings")
            
            -- FIXED: Notification toggle that actually works
            local notifToggle, getNotifState = settingsTab:CreateToggle("Enable Notifications", NOTIFICATIONS_ENABLED, function(enabled)
                NOTIFICATIONS_ENABLED = enabled
                if enabled then
                    createNotification("Notifications Enabled", "You will now receive notifications", 3, "success")
                else
                    createNotification("Notifications Disabled", "Notifications have been turned off", 3, "info")
                end
            end)
            
            settingsTab:CreateSection("Keybind Selector")
            local keybindSelector, getKeybind = settingsTab:CreateKeybind("UI Toggle Key", Window._uiKey, function(newKey)
                Window._uiKey = newKey
                createNotification("Keybind Updated", "UI toggle key changed to " .. tostring(newKey):gsub("Enum.KeyCode.", ""), 3, "success")
            end)
            
            settingsTab:CreateSection("Database")
            settingsTab:CreateButton(EMOJIS.REFRESH .. " Refresh Database", function()
                createNotification("Database Refreshed", "Script database has been updated", 3, "success")
            end)
            
            settingsTab:CreateSection("Theme")
            settingsTab:CreateButton(EMOJIS.SETTINGS .. " Theme Settings", function()
                createNotification("Coming Soon", "Theme customization will be available soon", 3, "info")
            end)

            -- FIXED: Ensure home tab shows first
            spawn(function()
                wait(0.1)
                homeTab:Show()
            end)
        end
    end

    function Window:Destroy()
        -- Clear active notifications to prevent them from showing after UI destruction
        for i = #ActiveNotifications, 1, -1 do
            local notif = ActiveNotifications[i]
            if notif and notif.Parent then
                notif:Destroy()
            end
            table.remove(ActiveNotifications, i)
        end
        
        if screen and screen.Parent then
            screen:Destroy()
        end
    end

    -- Start hidden by default; show key screen or hub based on lock state
    setVisibility(false)

    if Window._locked then
        -- Show key system; main hub stays hidden until unlocked
        createKeySystem(Window)
    else
        -- No key system; show hub immediately
        Window:Show()
    end

    -- Always apply metatable regardless of key system state
    setmetatable(Window, {__index = Lynk})

    return Window
end

return Lynk
