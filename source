-- LYNK UI Library - Fixed Version
-- Fixed the early return issue that prevented main UI from loading after key system

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Configuration
local KEY_SYSTEM_ENABLED = true
local VALID_KEYS = {
    "LYNK-2024-PREMIUM",
    "SCRIPTHUB-VIP-ACCESS",
    "UNIVERSAL-KEY-2024"
}

local Lynk = {}
Lynk.__index = Lynk

-- Create the main UI library
function Lynk:CreateWindow(Config)
    local Window = {}
    Window.Config = Config or {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    Window.Visible = false
    
    -- Create main UI first, before key system check
    -- This ensures all methods are defined regardless of key system state
    self:CreateMainUI(Window)
    
    -- Handle key system after UI is created
    if KEY_SYSTEM_ENABLED then
        Window.Visible = false -- Hide main UI initially
        self:CreateKeySystem(Window)
    else
        Window.Visible = true -- Show main UI immediately if no key system
    end
    
    return Window
end

function Lynk:CreateMainUI(Window)
    -- Create main ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "LynkUI"
    ScreenGui.Parent = PlayerGui
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Window.ScreenGui = ScreenGui
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Visible = Window.Visible or false
    
    -- Add corner radius
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 12)
    Corner.Parent = MainFrame
    
    Window.MainFrame = MainFrame
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = Window.Config.Accent or Color3.fromRGB(88, 101, 242)
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 12)
    TitleCorner.Parent = TitleBar
    
    -- Title Text
    local TitleText = Instance.new("TextLabel")
    TitleText.Name = "TitleText"
    TitleText.Parent = TitleBar
    TitleText.BackgroundTransparency = 1
    TitleText.Position = UDim2.new(0, 15, 0, 0)
    TitleText.Size = UDim2.new(1, -50, 1, 0)
    TitleText.Font = Enum.Font.GothamBold
    TitleText.Text = Window.Config.Title or "LYNK UI"
    TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleText.TextSize = 16
    TitleText.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(1, -35, 0, 5)
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "×"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 18
    
    CloseButton.MouseButton1Click:Connect(function()
        Window:Hide()
    end)
    
    -- Tab Container
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = MainFrame
    TabContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    TabContainer.BorderSizePixel = 0
    TabContainer.Position = UDim2.new(0, 0, 0, 40)
    TabContainer.Size = UDim2.new(0, 150, 1, -40)
    
    Window.TabContainer = TabContainer
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Parent = MainFrame
    ContentContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Position = UDim2.new(0, 150, 0, 40)
    ContentContainer.Size = UDim2.new(1, -150, 1, -40)
    
    Window.ContentContainer = ContentContainer
    
    -- Define all Window methods here so they exist regardless of key system
    function Window:Show()
        self.Visible = true
        if self.MainFrame then
            self.MainFrame.Visible = true
        end
    end
    
    function Window:Hide()
        self.Visible = false
        if self.MainFrame then
            self.MainFrame.Visible = false
        end
    end
    
    function Window:CreateTab(Name, Icon)
        local Tab = {}
        Tab.Name = Name
        Tab.Icon = Icon
        Tab.Elements = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = Name .. "Tab"
        TabButton.Parent = self.TabContainer
        TabButton.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        TabButton.BorderSizePixel = 0
        TabButton.Position = UDim2.new(0, 5, 0, 5 + (#self.Tabs * 45))
        TabButton.Size = UDim2.new(1, -10, 0, 40)
        TabButton.Font = Enum.Font.Gotham
        TabButton.Text = Name
        TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
        TabButton.TextSize = 14
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 8)
        TabCorner.Parent = TabButton
        
        -- Tab Content Frame
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = Name .. "Content"
        TabContent.Parent = self.ContentContainer
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.ScrollBarThickness = 6
        TabContent.Visible = false
        
        Tab.Content = TabContent
        Tab.Button = TabButton
        
        -- Tab switching
        TabButton.MouseButton1Click:Connect(function()
            self:SwitchTab(Tab)
        end)
        
        -- Tab methods
        function Tab:CreateLabel(Text)
            local Label = Instance.new("TextLabel")
            Label.Name = "Label"
            Label.Parent = self.Content
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 10, 0, #self.Elements * 35 + 10)
            Label.Size = UDim2.new(1, -20, 0, 25)
            Label.Font = Enum.Font.Gotham
            Label.Text = Text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextSize = 14
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            table.insert(self.Elements, Label)
            self:UpdateCanvasSize()
            return Label
        end
        
        function Tab:CreateButton(Text, Callback)
            local Button = Instance.new("TextButton")
            Button.Name = "Button"
            Button.Parent = self.Content
            Button.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            Button.BorderSizePixel = 0
            Button.Position = UDim2.new(0, 10, 0, #self.Elements * 35 + 10)
            Button.Size = UDim2.new(1, -20, 0, 30)
            Button.Font = Enum.Font.Gotham
            Button.Text = Text
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 6)
            ButtonCorner.Parent = Button
            
            Button.MouseButton1Click:Connect(function()
                if Callback then
                    Callback()
                end
            end)
            
            table.insert(self.Elements, Button)
            self:UpdateCanvasSize()
            return Button
        end
        
        function Tab:UpdateCanvasSize()
            self.Content.CanvasSize = UDim2.new(0, 0, 0, #self.Elements * 35 + 20)
        end
        
        table.insert(self.Tabs, Tab)
        
        -- Set as current tab if it's the first one
        if #self.Tabs == 1 then
            self:SwitchTab(Tab)
        end
        
        return Tab
    end
    
    function Window:SwitchTab(Tab)
        -- Hide all tabs
        for _, tab in pairs(self.Tabs) do
            tab.Content.Visible = false
            tab.Button.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        end
        
        -- Show selected tab
        Tab.Content.Visible = true
        Tab.Button.BackgroundColor3 = self.Config.Accent or Color3.fromRGB(88, 101, 242)
        self.CurrentTab = Tab
    end
    
    function Window:LoadScriptCards()
        -- This method can be called by the loader to populate script cards
        print("Loading script cards...")
    end
    
    -- Set up keybind toggle after UI is created
    local toggleKey = Window.Config.DefaultKeybind or Enum.KeyCode.Insert
    
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == toggleKey then
            if Window.Visible then
                Window:Hide()
            else
                Window:Show()
            end
        end
    end)
    
    -- Make draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

function Lynk:CreateKeySystem(Window)
    -- Create key system ScreenGui
    local KeyScreenGui = Instance.new("ScreenGui")
    KeyScreenGui.Name = "LynkKeySystem"
    KeyScreenGui.Parent = PlayerGui
    KeyScreenGui.ResetOnSpawn = false
    KeyScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Background blur effect
    local Background = Instance.new("Frame")
    Background.Name = "Background"
    Background.Parent = KeyScreenGui
    Background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Background.BackgroundTransparency = 0.3
    Background.BorderSizePixel = 0
    Background.Size = UDim2.new(1, 0, 1, 0)
    
    -- Key system frame
    local KeyFrame = Instance.new("Frame")
    KeyFrame.Name = "KeyFrame"
    KeyFrame.Parent = KeyScreenGui
    KeyFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    KeyFrame.BorderSizePixel = 0
    KeyFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    KeyFrame.Size = UDim2.new(0, 400, 0, 300)
    
    local KeyCorner = Instance.new("UICorner")
    KeyCorner.CornerRadius = UDim.new(0, 12)
    KeyCorner.Parent = KeyFrame
    
    -- Title
    local KeyTitle = Instance.new("TextLabel")
    KeyTitle.Name = "KeyTitle"
    KeyTitle.Parent = KeyFrame
    KeyTitle.BackgroundTransparency = 1
    KeyTitle.Position = UDim2.new(0, 0, 0, 20)
    KeyTitle.Size = UDim2.new(1, 0, 0, 40)
    KeyTitle.Font = Enum.Font.GothamBold
    KeyTitle.Text = "🔐 LYNK Key System"
    KeyTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeyTitle.TextSize = 20
    
    -- Subtitle
    local KeySubtitle = Instance.new("TextLabel")
    KeySubtitle.Name = "KeySubtitle"
    KeySubtitle.Parent = KeyFrame
    KeySubtitle.BackgroundTransparency = 1
    KeySubtitle.Position = UDim2.new(0, 0, 0, 60)
    KeySubtitle.Size = UDim2.new(1, 0, 0, 30)
    KeySubtitle.Font = Enum.Font.Gotham
    KeySubtitle.Text = "Enter your premium access key to continue"
    KeySubtitle.TextColor3 = Color3.fromRGB(200, 200, 200)
    KeySubtitle.TextSize = 14
    
    -- Key input
    local KeyInput = Instance.new("TextBox")
    KeyInput.Name = "KeyInput"
    KeyInput.Parent = KeyFrame
    KeyInput.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    KeyInput.BorderSizePixel = 0
    KeyInput.Position = UDim2.new(0, 30, 0, 120)
    KeyInput.Size = UDim2.new(1, -60, 0, 40)
    KeyInput.Font = Enum.Font.Gotham
    KeyInput.PlaceholderText = "Enter your key here..."
    KeyInput.Text = ""
    KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeyInput.TextSize = 14
    
    local InputCorner = Instance.new("UICorner")
    InputCorner.CornerRadius = UDim.new(0, 8)
    InputCorner.Parent = KeyInput
    
    -- Activate button
    local ActivateButton = Instance.new("TextButton")
    ActivateButton.Name = "ActivateButton"
    ActivateButton.Parent = KeyFrame
    ActivateButton.BackgroundColor3 = Window.Config.Accent or Color3.fromRGB(88, 101, 242)
    ActivateButton.BorderSizePixel = 0
    ActivateButton.Position = UDim2.new(0, 30, 0, 180)
    ActivateButton.Size = UDim2.new(1, -60, 0, 40)
    ActivateButton.Font = Enum.Font.GothamBold
    ActivateButton.Text = "🚀 Activate"
    ActivateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ActivateButton.TextSize = 16
    
    local ActivateCorner = Instance.new("UICorner")
    ActivateCorner.CornerRadius = UDim.new(0, 8)
    ActivateCorner.Parent = ActivateButton
    
    -- Status label
    local StatusLabel = Instance.new("TextLabel")
    StatusLabel.Name = "StatusLabel"
    StatusLabel.Parent = KeyFrame
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Position = UDim2.new(0, 0, 0, 240)
    StatusLabel.Size = UDim2.new(1, 0, 0, 30)
    StatusLabel.Font = Enum.Font.Gotham
    StatusLabel.Text = ""
    StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    StatusLabel.TextSize = 12
    
    -- Fixed activate button functionality
    ActivateButton.MouseButton1Click:Connect(function()
        local enteredKey = KeyInput.Text
        local isValidKey = false
        
        for _, validKey in pairs(VALID_KEYS) do
            if enteredKey == validKey then
                isValidKey = true
                break
            end
        end
        
        if isValidKey then
            StatusLabel.Text = "✅ Key validated! Loading..."
            StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            
            -- Properly show main UI after key validation
            wait(1)
            KeyScreenGui:Destroy()
            Window:Show() -- This now works because Show() method was defined earlier
        else
            StatusLabel.Text = "❌ Invalid key! Please try again."
            StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            
            -- Shake animation for invalid key
            local shakeInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, 0, true, 0)
            local shakeTween = TweenService:Create(KeyFrame, shakeInfo, {Position = UDim2.new(0.5, -190, 0.5, -150)})
            shakeTween:Play()
            shakeTween.Completed:Connect(function()
                KeyFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
            end)
        end
    end)
    
    -- Enter key support
    KeyInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            ActivateButton.MouseButton1Click:Fire()
        end
    end)
end

return Lynk
