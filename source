-- lynkUI v2.0 - Professional Script Hub UI Library
-- Features: Modern design, smooth animations, player profile, search functionality
-- Four main tabs: Home (Script Hub), Updates, Credits, Settings

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
    error("lynkUI: LocalPlayer not found - run as a LocalScript / exploit local")
end

-- Enhanced Utilities
local function new(class, props)
    local inst = Instance.new(class)
    if type(props) == "table" then
        for k,v in pairs(props) do
            pcall(function() inst[k] = v end)
        end
    end
    return inst
end

local function createGradient(parent, colors, rotation)
    local gradient = new("UIGradient", {
        Color = ColorSequence.new(colors),
        Rotation = rotation or 0
    })
    gradient.Parent = parent
    return gradient
end

local function createGlow(parent, color, size)
    local glow = new("ImageLabel", {
        Name = "Glow",
        Parent = parent,
        BackgroundTransparency = 1,
        Image = "rbxasset://textures/ui/Glow.png",
        ImageColor3 = color or Color3.new(1,1,1),
        ImageTransparency = 0.8,
        Size = size or UDim2.new(1, 20, 1, 20),
        Position = UDim2.new(0, -10, 0, -10),
        ZIndex = parent.ZIndex - 1
    })
    return glow
end

-- Professional Color Palette
local THEME = {
    WindowSize = UDim2.new(0, 880, 0, 560),
    
    -- Dark theme colors
    Background = Color3.fromRGB(11, 11, 13),
    Surface = Color3.fromRGB(15, 15, 17),
    Panel = Color3.fromRGB(19, 19, 22),
    Card = Color3.fromRGB(23, 23, 27),
    
    -- Accent colors
    Primary = Color3.fromRGB(88, 101, 242),    -- Discord-like purple
    Secondary = Color3.fromRGB(114, 137, 218), -- Lighter purple
    Success = Color3.fromRGB(67, 181, 129),    -- Green
    Warning = Color3.fromRGB(250, 166, 26),    -- Orange
    Danger = Color3.fromRGB(237, 66, 69),      -- Red
    
    -- Text colors
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(185, 187, 190),
    TextMuted = Color3.fromRGB(114, 118, 125),
    
    -- Border and dividers
    Border = Color3.fromRGB(35, 35, 40),
    Divider = Color3.fromRGB(45, 45, 50),
    
    -- Corner radius
    CornerRadius = UDim.new(0, 12),
    SmallCornerRadius = UDim.new(0, 8),
    
    -- Animation settings
    FastTween = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    MediumTween = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    SlowTween = TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
}

local Lynk = {}
Lynk.__index = Lynk

function Lynk:CreateWindow(opts)
    opts = opts or {}
    local Window = {}
    Window._tabs = {}
    Window._currentTab = nil
    Window._accent = opts.Accent or THEME.Primary
    Window._logo = opts.Logo or "rbxassetid://17673929618"
    Window._title = opts.Title or (opts.Name or "lynkUI v2.0")
    Window._subtitle = opts.Subtitle or "Universal Script Hub"
    -- Changed default keybind from RightControl to Insert
    Window._uiKey = opts.DefaultKeybind or Enum.KeyCode.Insert
    Window._shown = false

    -- Create ScreenGui with enhanced properties
    local screen = new("ScreenGui", {
        Name = opts.Name or "lynkUI",
        ResetOnSpawn = false,
        DisplayOrder = 10000,
        IgnoreGuiInset = true,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })
    screen.Parent = LocalPlayer:WaitForChild("PlayerGui")

    -- Main container with blur effect
    local BlurFrame = new("Frame", {
        Name = "BlurContainer",
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundColor3 = Color3.new(0, 0, 0),
        BackgroundTransparency = 0.3,
        BorderSizePixel = 0,
        Visible = false
    })
    BlurFrame.Parent = screen

    -- Main window outline
    local Outline = new("Frame", {
        Name = "Outline",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = THEME.Border,
        BorderSizePixel = 0,
        ZIndex = 2
    })
    Outline.Parent = BlurFrame
    
    local outlineCorner = new("UICorner")
    outlineCorner.CornerRadius = THEME.CornerRadius
    outlineCorner.Parent = Outline

    -- Add subtle glow to outline
    createGlow(Outline, Window._accent)

    -- Main content frame
    local MainFrame = new("Frame", {
        Name = "MainFrame",
        Position = UDim2.new(0, 2, 0, 2),
        Size = UDim2.new(1, -4, 1, -4),
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0
    })
    MainFrame.Parent = Outline
    
    local mainCorner = new("UICorner")
    mainCorner.CornerRadius = THEME.CornerRadius
    mainCorner.Parent = MainFrame

    -- Sidebar (left panel)
    local Sidebar = new("Frame", {
        Name = "Sidebar",
        Size = UDim2.new(0, 280, 1, 0),
        BackgroundColor3 = THEME.Surface,
        BorderSizePixel = 0
    })
    Sidebar.Parent = MainFrame
    
    local sidebarCorner = new("UICorner")
    sidebarCorner.CornerRadius = THEME.CornerRadius
    sidebarCorner.Parent = Sidebar

    -- Sidebar gradient
    createGradient(Sidebar, {
        ColorSequenceKeypoint.new(0, THEME.Surface),
        ColorSequenceKeypoint.new(1, THEME.Panel)
    }, 90)

    -- Player Profile Section
    local ProfileContainer = new("Frame", {
        Name = "ProfileContainer",
        Position = UDim2.new(0, 20, 0, 20),
        Size = UDim2.new(1, -40, 0, 80),
        BackgroundColor3 = THEME.Card,
        BorderSizePixel = 0
    })
    ProfileContainer.Parent = Sidebar
    
    local profileCorner = new("UICorner")
    profileCorner.CornerRadius = THEME.SmallCornerRadius
    profileCorner.Parent = ProfileContainer

    -- Player avatar (circular)
    local AvatarContainer = new("Frame", {
        Name = "AvatarContainer",
        Position = UDim2.new(0, 12, 0, 12),
        Size = UDim2.new(0, 56, 0, 56),
        BackgroundColor3 = THEME.Primary,
        BorderSizePixel = 0
    })
    AvatarContainer.Parent = ProfileContainer
    
    local avatarCorner = new("UICorner")
    avatarCorner.CornerRadius = UDim.new(0.5, 0)
    avatarCorner.Parent = AvatarContainer

    local PlayerAvatar = new("ImageLabel", {
        Name = "PlayerAvatar",
        Position = UDim2.new(0, 2, 0, 2),
        Size = UDim2.new(1, -4, 1, -4),
        Image = Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420),
        BackgroundTransparency = 1,
        ScaleType = Enum.ScaleType.Crop
    })
    PlayerAvatar.Parent = AvatarContainer
    
    local playerAvatarCorner = new("UICorner")
    playerAvatarCorner.CornerRadius = UDim.new(0.5, 0)
    playerAvatarCorner.Parent = PlayerAvatar

    -- Player username
    local PlayerName = new("TextLabel", {
        Name = "PlayerName",
        Position = UDim2.new(0, 80, 0, 15),
        Size = UDim2.new(1, -92, 0, 24),
        BackgroundTransparency = 1,
        Text = "@" .. LocalPlayer.Name,
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextTruncate = Enum.TextTruncate.AtEnd
    })
    PlayerName.Parent = ProfileContainer

    -- Online status indicator
    local StatusIndicator = new("Frame", {
        Name = "StatusIndicator",
        Position = UDim2.new(0, 80, 0, 42),
        Size = UDim2.new(0, 8, 0, 8),
        BackgroundColor3 = THEME.Success,
        BorderSizePixel = 0
    })
    StatusIndicator.Parent = ProfileContainer
    
    local statusCorner = new("UICorner")
    statusCorner.CornerRadius = UDim.new(0.5, 0)
    statusCorner.Parent = StatusIndicator

    local StatusText = new("TextLabel", {
        Name = "StatusText",
        Position = UDim2.new(0, 96, 0, 38),
        Size = UDim2.new(1, -108, 0, 16),
        BackgroundTransparency = 1,
        Text = "Online",
        Font = Enum.Font.Gotham,
        TextSize = 12,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    StatusText.Parent = ProfileContainer

    -- Tabs container
    local TabsContainer = new("Frame", {
        Name = "TabsContainer",
        Position = UDim2.new(0, 20, 0, 120),
        Size = UDim2.new(1, -40, 1, -140),
        BackgroundTransparency = 1
    })
    TabsContainer.Parent = Sidebar

    local tabsLayout = new("UIListLayout")
    tabsLayout.Parent = TabsContainer
    tabsLayout.Padding = UDim.new(0, 8)
    tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Content area
    local ContentArea = new("Frame", {
        Name = "ContentArea",
        Position = UDim2.new(0, 280, 0, 0),
        Size = UDim2.new(1, -280, 1, 0),
        BackgroundTransparency = 1
    })
    ContentArea.Parent = MainFrame

    -- Top bar in content area
    local TopBar = new("Frame", {
        Name = "TopBar",
        Size = UDim2.new(1, 0, 0, 80),
        BackgroundTransparency = 1
    })
    TopBar.Parent = ContentArea

    -- Title section
    local TitleContainer = new("Frame", {
        Name = "TitleContainer",
        Position = UDim2.new(0, 30, 0, 20),
        Size = UDim2.new(0.6, 0, 0, 40),
        BackgroundTransparency = 1
    })
    TitleContainer.Parent = TopBar

    local MainTitle = new("TextLabel", {
        Name = "MainTitle",
        Size = UDim2.new(1, 0, 0, 24),
        BackgroundTransparency = 1,
        Text = Window._title,
        Font = Enum.Font.GothamBold,
        TextSize = 24,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    MainTitle.Parent = TitleContainer

    local Subtitle = new("TextLabel", {
        Name = "Subtitle",
        Position = UDim2.new(0, 0, 0, 24),
        Size = UDim2.new(1, 0, 0, 16),
        BackgroundTransparency = 1,
        Text = Window._subtitle,
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = THEME.TextMuted,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    Subtitle.Parent = TitleContainer

    -- Close button (enhanced)
    local CloseButton = new("TextButton", {
        Name = "CloseButton",
        Position = UDim2.new(1, -60, 0, 20),
        Size = UDim2.new(0, 40, 0, 40),
        BackgroundColor3 = THEME.Danger,
        Text = "×",
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        TextColor3 = THEME.Text,
        AutoButtonColor = false
    })
    CloseButton.Parent = TopBar
    
    local closeCorner = new("UICorner")
    closeCorner.CornerRadius = THEME.SmallCornerRadius
    closeCorner.Parent = CloseButton

    -- Close button hover effects
    local function animateButton(button, hoverColor, normalColor)
        button.MouseEnter:Connect(function()
            TweenService:Create(button, THEME.FastTween, {BackgroundColor3 = hoverColor}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, THEME.FastTween, {BackgroundColor3 = normalColor}):Play()
        end)
    end
    animateButton(CloseButton, Color3.fromRGB(220, 50, 50), THEME.Danger)

    -- Create confirmation popup
    local ConfirmationPopup = new("Frame", {
        Name = "ConfirmationPopup",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = THEME.Background,
        BorderSizePixel = 0,
        Visible = false,
        ZIndex = 100
    })
    ConfirmationPopup.Parent = BlurFrame
    
    local popupCorner = new("UICorner")
    popupCorner.CornerRadius = THEME.CornerRadius
    popupCorner.Parent = ConfirmationPopup

    -- Popup outline
    local PopupOutline = new("UIStroke", {
        Color = THEME.Border,
        Thickness = 2
    })
    PopupOutline.Parent = ConfirmationPopup

    -- Popup title
    local PopupTitle = new("TextLabel", {
        Name = "PopupTitle",
        Position = UDim2.new(0, 20, 0, 20),
        Size = UDim2.new(1, -40, 0, 30),
        BackgroundTransparency = 1,
        Text = "Confirm Close",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    PopupTitle.Parent = ConfirmationPopup

    -- Popup message
    local PopupMessage = new("TextLabel", {
        Name = "PopupMessage",
        Position = UDim2.new(0, 20, 0, 60),
        Size = UDim2.new(1, -40, 0, 60),
        BackgroundTransparency = 1,
        -- Updated popup message to reflect Insert key instead of RightCtrl
        Text = "Are you sure you want to close?\nInstead press Insert to toggle the UI.",
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = THEME.TextSecondary,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextWrapped = true
    })
    PopupMessage.Parent = ConfirmationPopup

    -- Yes button (green)
    local YesButton = new("TextButton", {
        Name = "YesButton",
        Position = UDim2.new(0, 20, 1, -60),
        Size = UDim2.new(0, 100, 0, 40),
        BackgroundColor3 = Color3.fromRGB(46, 160, 67),
        Text = "Yes",
        Font = Enum.Font.GothamSemibold,
        TextSize = 16,
        TextColor3 = Color3.new(1, 1, 1),
        AutoButtonColor = false
    })
    YesButton.Parent = ConfirmationPopup
    
    local yesCorner = new("UICorner")
    yesCorner.CornerRadius = THEME.SmallCornerRadius
    yesCorner.Parent = YesButton

    -- No button (red)
    local NoButton = new("TextButton", {
        Name = "NoButton",
        Position = UDim2.new(1, -120, 1, -60),
        Size = UDim2.new(0, 100, 0, 40),
        BackgroundColor3 = Color3.fromRGB(220, 50, 50),
        Text = "No",
        Font = Enum.Font.GothamSemibold,
        TextSize = 16,
        TextColor3 = Color3.new(1, 1, 1),
        AutoButtonColor = false
    })
    NoButton.Parent = ConfirmationPopup
    
    local noCorner = new("UICorner")
    noCorner.CornerRadius = THEME.SmallCornerRadius
    noCorner.Parent = NoButton

    -- Button hover effects for popup buttons
    animateButton(YesButton, Color3.fromRGB(56, 180, 77), Color3.fromRGB(46, 160, 67))
    animateButton(NoButton, Color3.fromRGB(240, 70, 70), Color3.fromRGB(220, 50, 50))

    -- Modified close button to show popup instead of directly closing
    CloseButton.MouseButton1Click:Connect(function()
        ConfirmationPopup.Visible = true
        -- Animate popup appearance
        ConfirmationPopup.Size = UDim2.new(0, 0, 0, 0)
        TweenService:Create(ConfirmationPopup, THEME.MediumTween, {
            Size = UDim2.new(0, 400, 0, 200)
        }):Play()
    end)

    -- Yes button closes the entire UI
    YesButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)

    -- No button just hides the popup
    NoButton.MouseButton1Click:Connect(function()
        TweenService:Create(ConfirmationPopup, THEME.FastTween, {
            Size = UDim2.new(0, 0, 0, 0)
        }):Play()
        wait(0.2)
        ConfirmationPopup.Visible = false
    end)

    -- Pages container with smooth transitions
    local PagesContainer = new("Frame", {
        Name = "PagesContainer",
        Position = UDim2.new(0, 30, 0, 80),
        Size = UDim2.new(1, -60, 1, -100),
        BackgroundTransparency = 1,
        ClipsDescendants = true
    })
    PagesContainer.Parent = ContentArea

    -- Store references
    Window._screen = screen
    Window._blurFrame = BlurFrame
    Window._outline = Outline
    Window._mainFrame = MainFrame
    Window._sidebar = Sidebar
    Window._tabsContainer = TabsContainer
    Window._pagesContainer = PagesContainer
    Window._titleLabel = MainTitle
    Window._subtitleLabel = Subtitle

    -- Dragging functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil

    local function updateDrag(input)
        if dragging then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                   startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            TweenService:Create(Outline, THEME.FastTween, {Position = newPos}):Play()
        end
    end

    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Outline.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            updateDrag(input)
        end
    end)

    -- Window visibility toggle
    -- Set initial visibility to true so UI opens automatically
    local isVisible = true
    
    local function setVisibility(visible)
        isVisible = visible
        BlurFrame.Visible = visible
        
        if visible then
            -- Animate window opening
            Outline.Size = UDim2.new(0, 0, 0, 0)
            TweenService:Create(Outline, THEME.SlowTween, {
                Size = THEME.WindowSize
            }):Play()
        else
            -- Animate window closing
            TweenService:Create(Outline, THEME.MediumTween, {
                Size = UDim2.new(0, 0, 0, 0)
            }):Play()
            
            task.wait(0.25)
            if not isVisible then
                BlurFrame.Visible = false
            end
        end
    end

    -- Keybind listener
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Window._uiKey then
            setVisibility(not isVisible)
        end
    end)

    -- Tab creation and management
    function Window:CreateTab(name, icon, layoutOrder)
        local tab = {
            Name = name,
            Icon = icon or "",
            LayoutOrder = layoutOrder or (#Window._tabs + 1),
            Active = false
        }

        -- Tab button
        local TabButton = new("TextButton", {
            Name = name .. "_TabButton",
            Size = UDim2.new(1, 0, 0, 48),
            BackgroundColor3 = Color3.fromRGB(0, 0, 0),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            Text = "",
            AutoButtonColor = false,
            LayoutOrder = tab.LayoutOrder
        })
        TabButton.Parent = TabsContainer
        
        local tabCorner = new("UICorner")
        tabCorner.CornerRadius = THEME.SmallCornerRadius
        tabCorner.Parent = TabButton

        -- Tab icon
        local TabIcon = new("ImageLabel", {
            Name = "TabIcon",
            Position = UDim2.new(0, 16, 0.5, -10),
            Size = UDim2.new(0, 20, 0, 20),
            BackgroundTransparency = 1,
            Image = tab.Icon,
            ImageColor3 = THEME.TextMuted,
            ScaleType = Enum.ScaleType.Fit
        })
        TabIcon.Parent = TabButton

        -- Tab text
        local TabText = new("TextLabel", {
            Name = "TabText",
            Position = UDim2.new(0, 48, 0, 0),
            Size = UDim2.new(1, -60, 1, 0),
            BackgroundTransparency = 1,
            Text = name,
            Font = Enum.Font.GothamSemibold,
            TextSize = 15,
            TextColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left
        })
        TabText.Parent = TabButton

        -- Active indicator
        local ActiveIndicator = new("Frame", {
            Name = "ActiveIndicator",
            Position = UDim2.new(0, 0, 0.5, -12),
            Size = UDim2.new(0, 3, 0, 24),
            BackgroundColor3 = Window._accent,
            BorderSizePixel = 0,
            Visible = false
        })
        ActiveIndicator.Parent = TabButton
        
        local indicatorCorner = new("UICorner")
        indicatorCorner.CornerRadius = UDim.new(0, 2)
        indicatorCorner.Parent = ActiveIndicator

        -- Tab page
        local TabPage = new("Frame", {
            Name = name .. "_Page",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Visible = false
        })
        TabPage.Parent = PagesContainer

        -- Tab functions
        function tab:Show()
            -- Hide all other tabs
            for _, otherTab in pairs(Window._tabs) do
                if otherTab ~= tab then
                    otherTab:Hide()
                end
            end
            
            -- Show this tab
            tab.Active = true
            Window._currentTab = tab
            
            -- Animate tab appearance
            TabPage.Position = UDim2.new(1, 0, 0, 0)
            TabPage.Visible = true
            
            TweenService:Create(TabPage, THEME.MediumTween, {
                Position = UDim2.new(0, 0, 0, 0)
            }):Play()
            
            -- Update button appearance
            TweenService:Create(TabButton, THEME.FastTween, {
                BackgroundTransparency = 0,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255):lerp(Window._accent, 0.9)
            }):Play()
            TweenService:Create(TabText, THEME.FastTween, {TextColor3 = THEME.Text}):Play()
            TweenService:Create(TabIcon, THEME.FastTween, {ImageColor3 = Window._accent}):Play()
            ActiveIndicator.Visible = true
        end
        
        function tab:Hide()
            tab.Active = false
            
            -- Animate tab disappearance
            if TabPage.Visible then
                TweenService:Create(TabPage, THEME.FastTween, {
                    Position = UDim2.new(-1, 0, 0, 0)
                }):Play()
                
                task.wait(0.15)
                TabPage.Visible = false
                TabPage.Position = UDim2.new(0, 0, 0, 0)
            end
            
            -- Reset button appearance
            TweenService:Create(TabButton, THEME.FastTween, {
                BackgroundTransparency = 1
            }):Play()
            TweenService:Create(TabText, THEME.FastTween, {TextColor3 = THEME.TextMuted}):Play()
            TweenService:Create(TabIcon, THEME.FastTween, {ImageColor3 = THEME.TextMuted}):Play()
            ActiveIndicator.Visible = false
        end

        -- Button hover effects
        TabButton.MouseEnter:Connect(function()
            if not tab.Active then
                TweenService:Create(TabButton, THEME.FastTween, {
                    BackgroundTransparency = 0.95,
                    BackgroundColor3 = THEME.TextMuted
                }):Play()
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if not tab.Active then
                TweenService:Create(TabButton, THEME.FastTween, {
                    BackgroundTransparency = 1
                }):Play()
            end
        end)

        TabButton.MouseButton1Click:Connect(function()
            tab:Show()
        end)

        -- Store references
        tab.Button = TabButton
        tab.Page = TabPage
        tab.Icon = TabIcon
        tab.Text = TabText

        Window._tabs[#Window._tabs + 1] = tab
        return tab
    end

    -- Enhanced search functionality for script hub
    function Window:CreateSearchBar(parent, callback)
        local SearchContainer = new("Frame", {
            Name = "SearchContainer",
            Size = UDim2.new(1, 0, 0, 50),
            BackgroundColor3 = THEME.Card,
            BorderSizePixel = 0
        })
        SearchContainer.Parent = parent
        
        local searchCorner = new("UICorner")
        searchCorner.CornerRadius = THEME.SmallCornerRadius
        searchCorner.Parent = SearchContainer

        -- Search icon
        local SearchIcon = new("ImageLabel", {
            Name = "SearchIcon",
            Position = UDim2.new(0, 15, 0.5, -8),
            Size = UDim2.new(0, 16, 0, 16),
            BackgroundTransparency = 1,
            Image = "rbxassetid://3926305904",
            ImageColor3 = THEME.TextMuted,
            ImageRectOffset = Vector2.new(964, 324),
            ImageRectSize = Vector2.new(36, 36)
        })
        SearchIcon.Parent = SearchContainer

        -- Search textbox
        local SearchBox = new("TextBox", {
            Name = "SearchBox",
            Position = UDim2.new(0, 45, 0, 0),
            Size = UDim2.new(1, -90, 1, 0),
            BackgroundTransparency = 1,
            PlaceholderText = "Search for scripts, games, or keywords...",
            Text = "",
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextColor3 = THEME.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            ClearButtonEnabled = true
        })
        SearchBox.Parent = SearchContainer

        -- Search box events
        SearchBox.Focused:Connect(function()
            TweenService:Create(SearchContainer, THEME.FastTween, {
                BackgroundColor3 = THEME.Panel
            }):Play()
            TweenService:Create(SearchIcon, THEME.FastTween, {
                ImageColor3 = Window._accent
            }):Play()
        end)

        SearchBox.FocusLost:Connect(function()
            TweenService:Create(SearchContainer, THEME.FastTween, {
                BackgroundColor3 = THEME.Card
            }):Play()
            TweenService:Create(SearchIcon, THEME.FastTween, {
                ImageColor3 = THEME.TextMuted
            }):Play()
        end)

        if callback then
            SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
                callback(SearchBox.Text)
            end)
        end

        return SearchBox
    end

    -- Added missing CreateLabel function
    function Window:CreateLabel(parent, text, textSize)
        local label = new("TextLabel", {
            Size = UDim2.new(1, 0, 0, textSize and (textSize + 10) or 30),
            BackgroundTransparency = 1,
            Text = text or "Label",
            Font = Enum.Font.Gotham,
            TextSize = textSize or 14,
            TextColor3 = THEME.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextYAlignment = Enum.TextYAlignment.Center,
            TextWrapped = true
        })
        label.Parent = parent
        return label
    end

    function Window:CreateButton(parent, text, callback)
        local button = new("TextButton", {
            Size = UDim2.new(1, 0, 0, 40),
            BackgroundColor3 = Window._accent,
            BorderSizePixel = 0,
            Text = text or "Button",
            Font = Enum.Font.GothamSemibold,
            TextSize = 14,
            TextColor3 = THEME.Text,
            AutoButtonColor = false
        })
        button.Parent = parent
        
        local corner = new("UICorner")
        corner.CornerRadius = THEME.SmallCornerRadius
        corner.Parent = button

        -- Hover effects
        button.MouseEnter:Connect(function()
            TweenService:Create(button, THEME.FastTween, {
                BackgroundColor3 = button.BackgroundColor3:lerp(Color3.new(1,1,1), 0.1)
            }):Play()
        end)
        
        button.MouseLeave:Connect(function()
            TweenService:Create(button, THEME.FastTween, {
                BackgroundColor3 = Window._accent
            }):Play()
        end)

        if callback then
            button.MouseButton1Click:Connect(callback)
        end

        return button
    end

    function Window:Destroy()
        if screen and screen.Parent then
            screen:Destroy()
        end
    end

-- Added populate functions for Updates, Credits, and Settings tabs

-- Restoring the populateUpdatesTab function that was removed
local function populateUpdatesTab(updatesTab)
    -- Clear existing content
    for _, child in pairs(updatesTab:GetChildren()) do
        if child:IsA("GuiObject") then
            child:Destroy()
        end
    end
    
    -- Create scroll frame for updates content
    local ScrollFrame = new("ScrollingFrame", {
        Name = "UpdatesScrollFrame",
        Position = UDim2.new(0, 0, 0, 0),
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        ScrollBarThickness = 6,
        ScrollBarImageColor3 = THEME.TextMuted,
        CanvasSize = UDim2.new(0, 0, 0, 0),
        AutomaticCanvasSize = Enum.AutomaticSize.Y
    })
    ScrollFrame.Parent = updatesTab
    
    local layout = new("UIListLayout")
    layout.Parent = ScrollFrame
    layout.Padding = UDim.new(0, 8)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local padding = new("UIPadding")
    padding.Parent = ScrollFrame
    padding.PaddingAll = UDim.new(0, 20)
    
    -- Add updates content
    local updates = {
        {text = "📋 Recent Updates", size = 18, color = Window._accent, bold = true},
        {text = "", size = 10, color = THEME.Text, bold = false},
        {text = "🔄 Version 2.1.0:", size = 16, color = THEME.Text, bold = true},
        {text = "• Improved UI performance", size = 14, color = THEME.Text, bold = false},
        {text = "• Added new script categories", size = 14, color = THEME.Text, bold = false},
        {text = "• Enhanced search functionality", size = 14, color = THEME.Text, bold = false},
        {text = "", size = 10, color = THEME.Text, bold = false},
        {text = "🔄 Version 2.0.5:", size = 16, color = THEME.Text, bold = true},
        {text = "• Fixed loading issues", size = 14, color = THEME.Text, bold = false},
        {text = "• Updated script database", size = 14, color = THEME.Text, bold = false},
        {text = "• Improved stability", size = 14, color = THEME.Text, bold = false}
    }
    
    for i, update in ipairs(updates) do
        local updateLabel = new("TextLabel", {
            Name = "Update" .. i,
            Size = UDim2.new(1, 0, 0, update.size + 5),
            BackgroundTransparency = 1,
            Text = update.text,
            Font = update.bold and Enum.Font.GothamBold or Enum.Font.Gotham,
            TextSize = update.size,
            TextColor3 = update.color,
            TextXAlignment = Enum.TextXAlignment.Left,
            LayoutOrder = i
        })
        updateLabel.Parent = ScrollFrame
    end
end

local function populateCreditsTab(creditsTab)
    -- Clear existing content
    for _, child in pairs(creditsTab:GetChildren()) do
        if child:IsA("GuiObject") then
            child:Destroy()
        end
    end
    
    -- Create scroll frame for credits content
    local ScrollFrame = new("ScrollingFrame", {
        Name = "CreditsScrollFrame",
        Position = UDim2.new(0, 0, 0, 0),
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        ScrollBarThickness = 6,
        ScrollBarImageColor3 = THEME.TextMuted,
        CanvasSize = UDim2.new(0, 0, 0, 0),
        AutomaticCanvasSize = Enum.AutomaticSize.Y
    })
    ScrollFrame.Parent = creditsTab
    
    local layout = new("UIListLayout")
    layout.Parent = ScrollFrame
    layout.Padding = UDim.new(0, 8)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local padding = new("UIPadding")
    padding.Parent = ScrollFrame
    padding.PaddingAll = UDim.new(0, 20)
    
    -- Add credits content
    local credits = {
        {text = "🚀 LYNK Script Hub v2.1", size = 18, color = Window._accent, bold = true},
        {text = "", size = 10, color = THEME.Text, bold = false},
        {text = "👨‍💻 Development Team:", size = 16, color = THEME.Text, bold = true},
        {text = "• @x_vvw - Lead Developer", size = 14, color = THEME.Text, bold = false},
        {text = "• Script Hub Community", size = 14, color = THEME.Text, bold = false},
        {text = "", size = 10, color = THEME.Text, bold = false},
        {text = "🎨 Features:", size = 16, color = THEME.Text, bold = true},
        {text = "• Modern GitHub integration", size = 14, color = THEME.Text, bold = false},
        {text = "• Auto game detection", size = 14, color = THEME.Text, bold = false},
        {text = "• Professional card layout", size = 14, color = THEME.Text, bold = false},
        {text = "• Smart search system", size = 14, color = THEME.Text, bold = false},
        {text = "", size = 10, color = THEME.Text, bold = false},
        {text = "https://discord.gg/AzMbjqD7T3", size = 14, color = Window._accent, bold = false}
    }
    
    for i, credit in ipairs(credits) do
        local creditLabel = new("TextLabel", {
            Name = "Credit" .. i,
            Size = UDim2.new(1, 0, 0, credit.size + 5),
            BackgroundTransparency = 1,
            Text = credit.text,
            Font = credit.bold and Enum.Font.GothamBold or Enum.Font.Gotham,
            TextSize = credit.size,
            TextColor3 = credit.color,
            TextXAlignment = Enum.TextXAlignment.Left,
            LayoutOrder = i
        })
        creditLabel.Parent = ScrollFrame
    end
end

local function populateSettingsTab(settingsTab)
    -- Clear existing content
    for _, child in pairs(settingsTab:GetChildren()) do
        if child:IsA("GuiObject") then
            child:Destroy()
        end
    end
    
    -- Create scroll frame for settings content
    local ScrollFrame = new("ScrollingFrame", {
        Name = "SettingsScrollFrame",
        Position = UDim2.new(0, 0, 0, 0),
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        ScrollBarThickness = 6,
        ScrollBarImageColor3 = THEME.TextMuted,
        CanvasSize = UDim2.new(0, 0, 0, 0),
        AutomaticCanvasSize = Enum.AutomaticSize.Y
    })
    ScrollFrame.Parent = settingsTab
    
    local layout = new("UIListLayout")
    layout.Parent = ScrollFrame
    layout.Padding = UDim.new(0, 15)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local padding = new("UIPadding")
    padding.Parent = ScrollFrame
    padding.PaddingAll = UDim.new(0, 20)
    
    -- Key selector for UI toggle
    local keyBindFrame = new("Frame", {
        Name = "KeyBindFrame",
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        LayoutOrder = 1
    })
    keyBindFrame.Parent = ScrollFrame
    
    local keyCorner = new("UICorner")
    keyCorner.CornerRadius = UDim.new(0, 8)
    keyCorner.Parent = keyBindFrame
    
    local keyTitle = new("TextLabel", {
        Name = "KeyTitle",
        Position = UDim2.new(0, 15, 0, 0),
        Size = UDim2.new(0.6, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = "UI Toggle Key",
        Font = Enum.Font.GothamSemibold,
        TextSize = 14,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextYAlignment = Enum.TextYAlignment.Center
    })
    keyTitle.Parent = keyBindFrame
    
    local keyButton = new("TextButton", {
        Name = "KeyButton",
        Position = UDim2.new(1, -120, 0.5, -15),
        Size = UDim2.new(0, 100, 0, 30),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        BorderSizePixel = 0,
        Text = "Insert",
        Font = Enum.Font.Gotham,
        TextSize = 12,
        TextColor3 = THEME.Text,
        AutoButtonColor = false
    })
    keyButton.Parent = keyBindFrame
    
    local buttonCorner = new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = keyButton
    
    -- Key mapping for display names
    local keyNames = {
        [Enum.KeyCode.Insert] = "Insert",
        [Enum.KeyCode.Home] = "Home",
        [Enum.KeyCode.End] = "End",
        [Enum.KeyCode.PageUp] = "PgUp",
        [Enum.KeyCode.PageDown] = "PgDn",
        [Enum.KeyCode.Delete] = "Delete",
        [Enum.KeyCode.F1] = "F1",
        [Enum.KeyCode.F2] = "F2",
        [Enum.KeyCode.F3] = "F3",
        [Enum.KeyCode.F4] = "F4",
        [Enum.KeyCode.F5] = "F5",
        [Enum.KeyCode.F6] = "F6",
        [Enum.KeyCode.F7] = "F7",
        [Enum.KeyCode.F8] = "F8",
        [Enum.KeyCode.F9] = "F9",
        [Enum.KeyCode.F10] = "F10",
        [Enum.KeyCode.F11] = "F11",
        [Enum.KeyCode.F12] = "F12",
        [Enum.KeyCode.LeftControl] = "LCtrl",
        [Enum.KeyCode.RightControl] = "RCtrl",
        [Enum.KeyCode.LeftShift] = "LShift",
        [Enum.KeyCode.RightShift] = "RShift"
    }
    
    local isBinding = false
    
    keyButton.MouseButton1Click:Connect(function()
        if not isBinding then
            isBinding = true
            keyButton.Text = "..."
            keyButton.TextColor3 = Window._accent
            
            local connection
            connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if gameProcessed then return end
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    local newKey = input.KeyCode
                    local keyName = keyNames[newKey] or tostring(newKey):gsub("Enum.KeyCode.", "")
                    
                    -- Update the UI key
                    Window._uiKey = newKey
                    keyButton.Text = keyName
                    keyButton.TextColor3 = THEME.Text
                    
                    connection:Disconnect()
                    isBinding = false
                end
            end)
        end
    end)
    
    -- Refresh Database Button
    local refreshFrame = new("Frame", {
        Name = "RefreshFrame",
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        LayoutOrder = 2
    })
    refreshFrame.Parent = ScrollFrame
    
    local refreshCorner = new("UICorner")
    refreshCorner.CornerRadius = UDim.new(0, 8)
    refreshCorner.Parent = refreshFrame
    
    local refreshButton = new("TextButton", {
        Name = "RefreshButton",
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = "🔄 Refresh Database",
        Font = Enum.Font.GothamSemibold,
        TextSize = 14,
        TextColor3 = THEME.Text,
        AutoButtonColor = false
    })
    refreshButton.Parent = refreshFrame
    
    refreshButton.MouseButton1Click:Connect(function()
        refreshButton.Text = "🔄 Refreshing..."
        refreshButton.TextColor3 = Window._accent
        
        task.wait(0.5)
        
        refreshButton.Text = "✅ Database Refreshed!"
        task.wait(1)
        refreshButton.Text = "🔄 Refresh Database"
        refreshButton.TextColor3 = THEME.Text
    end)
    
    -- Theme Settings Button
    local themeFrame = new("Frame", {
        Name = "ThemeFrame",
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        LayoutOrder = 3
    })
    themeFrame.Parent = ScrollFrame
    
    local themeCorner = new("UICorner")
    themeCorner.CornerRadius = UDim.new(0, 8)
    themeCorner.Parent = themeFrame
    
    local themeButton = new("TextButton", {
        Name = "ThemeButton",
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = "🎨 Theme Settings",
        Font = Enum.Font.GothamSemibold,
        TextSize = 14,
        TextColor3 = THEME.Text,
        AutoButtonColor = false
    })
    themeButton.Parent = themeFrame
    
    themeButton.MouseButton1Click:Connect(function()
        themeButton.Text = "🎨 Coming Soon!"
        themeButton.TextColor3 = Window._accent
        task.wait(1)
        themeButton.Text = "🎨 Theme Settings"
        themeButton.TextColor3 = THEME.Text
    end)
end

    -- Fixed GitHub URL placeholder and improved error handling
    -- Replaced GitHub loading with embedded script database
    local SCRIPT_DATABASE = {
        [301549746] = { -- Counter Blox
            gameName = "Counter Blox",
            scripts = {
                {title = "Lynk CB", description = "Advanced Counter Blox script", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkcb/refs/heads/main/counterblox"))()', RequiresKey = true}
            }
        },
        [9791603388] = { -- Underground War 2.0
            gameName = "Underground War 2.0",
            scripts = {
                {title = "Silent Aim Fixed", description = "Silent aim for Underground War", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/WITHERCC/refs/heads/main/un"))()', RequiresKey = false}
            }
        },
        ["Universal"] = {
            gameName = "Universal Scripts",
            scripts = {
                {title = "Infinite Yield", description = "Admin commands for any game", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()', RequiresKey = false},
                {title = "Fly Script", description = "Universal fly with speed control", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkUI/refs/heads/main/fly.lua"))()', RequiresKey = false},
                {title = "Noclip", description = "Walk through walls", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkUI/refs/heads/main/noclip.lua"))()', RequiresKey = false},
                {title = "Universal Fly", description = "Universal fly script", LoadString = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/WITHERCC/refs/heads/main/universal%20fly"))()', RequiresKey = false}
            }
        }
    }

    -- Removed GitHub loading functions since we're using embedded database
    local function getCurrentPlaceId()
        return game.PlaceId
    end

    -- Modified script card creation to use loadstrings and add click handler for sidebar
    -- Added script sidebar system
    function Window:CreateScriptSidebar()
        -- Sidebar container (initially hidden off-screen)
        local ScriptSidebar = new("Frame", {
            Name = "ScriptSidebar",
            Position = UDim2.new(1, 0, 0, 0),
            Size = UDim2.new(0, 350, 1, 0),
            BackgroundColor3 = THEME.Surface,
            BorderSizePixel = 0,
            ZIndex = 100
        })
        ScriptSidebar.Parent = MainFrame
        
        local sidebarCorner = new("UICorner")
        sidebarCorner.CornerRadius = THEME.CornerRadius
        sidebarCorner.Parent = ScriptSidebar
        
        -- Sidebar gradient
        createGradient(ScriptSidebar, {
            ColorSequenceKeypoint.new(0, THEME.Surface),
            ColorSequenceKeypoint.new(1, THEME.Panel)
        }, 90)

        -- Return button (changed from close button)
        local ReturnButton = new("TextButton", {
            Name = "ReturnButton",
            Position = UDim2.new(0, 10, 0, 10),
            Size = UDim2.new(0, 80, 0, 35),
            BackgroundColor3 = THEME.Primary,
            BorderSizePixel = 0,
            Text = "← Return",
            Font = Enum.Font.GothamBold,
            TextSize = 14,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            ZIndex = 101
        })
        ReturnButton.Parent = ScriptSidebar
        
        local returnCorner = new("UICorner")
        returnCorner.CornerRadius = UDim.new(0, 8)
        returnCorner.Parent = ReturnButton
        
        -- Content container
        local ContentContainer = new("ScrollingFrame", {
            Name = "ContentContainer",
            Position = UDim2.new(0, 20, 0, 60),
            Size = UDim2.new(1, -40, 1, -80),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            ScrollBarThickness = 6,
            ScrollBarImageColor3 = THEME.Primary,
            CanvasSize = UDim2.new(0, 0, 0, 0),
            AutomaticCanvasSize = Enum.AutomaticSize.Y,
            ZIndex = 101
        })
        ContentContainer.Parent = ScriptSidebar
        
        local contentLayout = new("UIListLayout")
        contentLayout.Parent = ContentContainer
        contentLayout.Padding = UDim.new(0, 15)
        contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        -- Store references
        Window._scriptSidebar = ScriptSidebar
        Window._sidebarContent = ContentContainer
        Window._sidebarReturnButton = ReturnButton
        
        -- Return button functionality
        ReturnButton.MouseButton1Click:Connect(function()
            Window:CloseScriptSidebar()
        end)
        
        return ScriptSidebar
    end

    -- Added function to open sidebar with script details
    function Window:OpenScriptSidebar(gameData, script)
        if not Window._scriptSidebar then
            Window:CreateScriptSidebar()
        end
        
        -- Make sidebar visible again when opening
        Window._scriptSidebar.Visible = true
        
        -- Clear existing content
        for _, child in pairs(Window._sidebarContent:GetChildren()) do
            if child:IsA("GuiObject") then
                child:Destroy()
            end
        end
        
        local placeId = gameData.placeId or "Universal"
        
        -- Game thumbnail (larger version)
        local ThumbnailContainer = new("Frame", {
            Name = "SidebarThumbnail",
            Size = UDim2.new(1, 0, 0, 180),
            BackgroundColor3 = THEME.Card,
            BorderSizePixel = 0,
            LayoutOrder = 1,
            ZIndex = 102
        })
        ThumbnailContainer.Parent = Window._sidebarContent
        
        local thumbCorner = new("UICorner")
        thumbCorner.CornerRadius = THEME.SmallCornerRadius
        thumbCorner.Parent = ThumbnailContainer
        
        local GameThumbnail = new("ImageLabel", {
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = placeId ~= "Universal" and string.format("https://www.roblox.com/asset-thumbnail/image?assetId=%d&width=768&height=432&format=png", placeId) or "",
            ScaleType = Enum.ScaleType.Crop,
            ZIndex = 102
        })
        GameThumbnail.Parent = ThumbnailContainer
        
        local imageCorner = new("UICorner")
        imageCorner.CornerRadius = THEME.SmallCornerRadius
        imageCorner.Parent = GameThumbnail
        
        -- Universal placeholder
        if placeId == "Universal" then
            local UniversalIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = "🌐",
                Font = Enum.Font.GothamBold,
                TextSize = 64,
                TextColor3 = THEME.Primary,
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 102
            })
            UniversalIcon.Parent = ThumbnailContainer
        end
        
        -- Key indicator (if needed)
        if script.RequiresKey then
            local KeyIndicator = new("Frame", {
                Position = UDim2.new(1, -35, 0, 10),
                Size = UDim2.new(0, 25, 0, 25),
                BackgroundColor3 = Color3.fromRGB(255, 193, 7),
                BorderSizePixel = 0,
                ZIndex = 103
            })
            KeyIndicator.Parent = ThumbnailContainer
            
            local keyCorner = new("UICorner")
            keyCorner.CornerRadius = UDim.new(0.5, 0)
            keyCorner.Parent = KeyIndicator
            
            local KeyIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = "🔑",
                Font = Enum.Font.GothamBold,
                TextSize = 14,
                TextColor3 = Color3.fromRGB(0, 0, 0),
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center,
                ZIndex = 103
            })
            KeyIcon.Parent = KeyIndicator
        end
        
        -- Game name
        local GameNameLabel = new("TextLabel", {
            Name = "SidebarGameName",
            Size = UDim2.new(1, 0, 0, 20),
            BackgroundTransparency = 1,
            Text = gameData.gameName,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left,
            LayoutOrder = 2,
            ZIndex = 102
        })
        GameNameLabel.Parent = Window._sidebarContent
        

        -- Script name (large and bold)
        local ScriptNameLabel = new("TextLabel", {
            Name = "SidebarScriptName",
            Size = UDim2.new(1, 0, 0, 30),
            BackgroundTransparency = 1,
            Text = script.Title or script.title or "Unknown Script", -- Added fallback for script name
            Font = Enum.Font.GothamBold,
            TextSize = 20,
            TextColor3 = THEME.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            LayoutOrder = 3,
            ZIndex = 102
        })
        ScriptNameLabel.Parent = Window._sidebarContent
        
        -- Description (if available)
        if script.Description then
            local DescriptionLabel = new("TextLabel", {
                Name = "SidebarDescription",
                Size = UDim2.new(1, 0, 0, 0),
                BackgroundTransparency = 1,
                Text = script.Description,
                Font = Enum.Font.Gotham,
                TextSize = 13,
                TextColor3 = THEME.TextMuted,
                TextXAlignment = Enum.TextXAlignment.Left,
                TextYAlignment = Enum.TextYAlignment.Top,
                TextWrapped = true,
                AutomaticSize = Enum.AutomaticSize.Y,
                LayoutOrder = 4,
                ZIndex = 102
            })
            DescriptionLabel.Parent = Window._sidebarContent
        end
        
        -- Execute button (large and prominent)
        local ExecuteButton = new("TextButton", {
            Name = "SidebarExecuteButton",
            Size = UDim2.new(1, 0, 0, 50),
            BackgroundColor3 = Color3.fromRGB(34, 197, 94),
            BorderSizePixel = 0,
            Text = "Execute Script",
            Font = Enum.Font.GothamBold,
            TextSize = 16,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            AutoButtonColor = false,
            LayoutOrder = 5,
            ZIndex = 102
        })
        ExecuteButton.Parent = Window._sidebarContent
        
        local executeCorner = new("UICorner")
        executeCorner.CornerRadius = THEME.SmallCornerRadius
        executeCorner.Parent = ExecuteButton
        
        -- Execute button functionality
        ExecuteButton.MouseButton1Click:Connect(function()
            ExecuteButton.Text = "Executing..."
            ExecuteButton.BackgroundColor3 = THEME.TextMuted
            
            spawn(function()
                local success, result = pcall(function()
                    loadstring(script.LoadString)()
                end)
                
                wait(1)
                
                if success then
                    ExecuteButton.Text = "Executed Successfully ✓"
                    ExecuteButton.BackgroundColor3 = Color3.fromRGB(34, 197, 94)
                else
                    ExecuteButton.Text = "Execution Failed ✗"
                    ExecuteButton.BackgroundColor3 = Color3.fromRGB(239, 68, 68)
                    warn("Script execution failed:", result)
                end
                
                wait(3)
                ExecuteButton.Text = "Execute Script"
                ExecuteButton.BackgroundColor3 = Color3.fromRGB(34, 197, 94)
            end)
        end)
        
        -- Animate sidebar in
        TweenService:Create(Window._scriptSidebar, THEME.MediumTween, {
            Position = UDim2.new(1, -350, 0, 0)
        }):Play()
    end


    -- Updated close sidebar function to properly hide the sidebar
    function Window:CloseScriptSidebar()
        if Window._scriptSidebar then
            -- Hide sidebar completely instead of moving to side
            local closeTween = TweenService:Create(Window._scriptSidebar, THEME.MediumTween, {
                Position = UDim2.new(1, 0, 0, 0),
                Visible = false
            })
            closeTween:Play()
            
            -- Clear sidebar content after animation
            closeTween.Completed:Connect(function()
                if Window._sidebarContent then
                    for _, child in pairs(Window._sidebarContent:GetChildren()) do
                        if child:IsA("GuiObject") then
                            child:Destroy()
                        end
                    end
                end
            end)
        end
    end

    -- Removed duplicate createScriptCard function and fixed property name inconsistencies
    local function createScriptCard(parent, gameData, script, position)
        local placeId = gameData.placeId or "Universal"
        
        -- Card container
        -- reduced card size from 280x200 to 240x180 to fit 2 columns
        local Card = new("Frame", {
            Name = "ScriptCard",
            Size = UDim2.new(0, 240, 0, 180), -- Reduced size for 2-column layout
            BackgroundColor3 = THEME.Card,
            BorderSizePixel = 0
        })
        Card.Parent = parent
        
        local cardCorner = new("UICorner")
        cardCorner.CornerRadius = THEME.SmallCornerRadius
        cardCorner.Parent = Card
        
        -- Card shadow/glow effect
        createGlow(Card, THEME.Primary, 0.8)
        
        -- Game thumbnail
        local ThumbnailContainer = new("Frame", {
            Name = "ThumbnailContainer",
            Position = UDim2.new(0, 8, 0, 8),
            Size = UDim2.new(1, -16, 0, 120),
            BackgroundColor3 = THEME.Surface,
            BorderSizePixel = 0
        })
        ThumbnailContainer.Parent = Card
        
        local thumbCorner = new("UICorner")
        thumbCorner.CornerRadius = THEME.SmallCornerRadius
        thumbCorner.Parent = ThumbnailContainer
        
        -- Game thumbnail image
        local GameThumbnail = new("ImageLabel", {
            Name = "GameThumbnail",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = placeId ~= "Universal" and string.format("https://www.roblox.com/asset-thumbnail/image?assetId=%d&width=768&height=432&format=png", placeId) or "",
            ScaleType = Enum.ScaleType.Crop
        })
        GameThumbnail.Parent = ThumbnailContainer
        
        local imageCorner = new("UICorner")
        imageCorner.CornerRadius = THEME.SmallCornerRadius
        imageCorner.Parent = GameThumbnail
        
        -- Universal scripts placeholder
        if placeId == "Universal" then
            local UniversalIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = "🌐",
                Font = Enum.Font.GothamBold,
                TextSize = 48,
                TextColor3 = THEME.Primary,
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center
            })
            UniversalIcon.Parent = ThumbnailContainer
        end
        
        -- Key system indicator
        if script.RequiresKey then
            local KeyIndicator = new("Frame", {
                Name = "KeyIndicator",
                Position = UDim2.new(1, -30, 0, 8),
                Size = UDim2.new(0, 22, 0, 22),
                BackgroundColor3 = Color3.fromRGB(255, 193, 7),
                BorderSizePixel = 0
            })
            KeyIndicator.Parent = ThumbnailContainer
            
            local keyCorner = new("UICorner")
            keyCorner.CornerRadius = UDim.new(0.5, 0)
            keyCorner.Parent = KeyIndicator
            
            local KeyIcon = new("TextLabel", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = "🔑",
                Font = Enum.Font.GothamBold,
                TextSize = 12,
                TextColor3 = Color3.fromRGB(0, 0, 0),
                TextXAlignment = Enum.TextXAlignment.Center,
                TextYAlignment = Enum.TextYAlignment.Center
            })
            KeyIcon.Parent = KeyIndicator
        end
        
        -- Game name
        local GameName = new("TextLabel", {
            Name = "GameName",
            Position = UDim2.new(0, 12, 0, 135),
            Size = UDim2.new(1, -24, 0, 16),
            BackgroundTransparency = 1,
            Text = gameData.gameName,
            Font = Enum.Font.Gotham,
            TextSize = 12,
            TextColor3 = THEME.TextMuted,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextTruncate = Enum.TextTruncate.AtEnd
        })
        GameName.Parent = Card
        
        -- Script name (bigger and bolder)
        local ScriptName = new("TextLabel", {
            Name = "ScriptName",
            Position = UDim2.new(0, 12, 0, 152),
            Size = UDim2.new(1, -24, 0, 20),
            BackgroundTransparency = 1,
            Text = script.Title or script.title, -- Fixed to handle both Title and title properties
            Font = Enum.Font.GothamBold,
            TextSize = 16,
            TextColor3 = THEME.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextTruncate = Enum.TextTruncate.AtEnd
        })
        ScriptName.Parent = Card
        
        -- Added click handler to open sidebar instead of direct execute button
        local ClickButton = new("TextButton", {
            Name = "ClickButton",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Text = "",
            ZIndex = 10
        })
        ClickButton.Parent = Card
        
        -- Card click functionality to open sidebar
        ClickButton.MouseButton1Click:Connect(function()
            Window:OpenScriptSidebar(gameData, script)
        end)
        
        -- Hover effects
        ClickButton.MouseEnter:Connect(function()
            TweenService:Create(Card, THEME.FastTween, {
                BackgroundColor3 = THEME.Surface
            }):Play()
        end)
        
        ClickButton.MouseLeave:Connect(function()
            TweenService:Create(Card, THEME.FastTween, {
                BackgroundColor3 = THEME.Card
            }):Play()
        end)
        
        return Card
    end

    -- Added function to populate home tab with script cards
    -- Modified populateHomeTab to include search bar
    local function populateHomeTab(homeTab)
        -- Clear existing content
        for _, child in pairs(homeTab:GetChildren()) do
            if child:IsA("GuiObject") then
                child:Destroy()
            end
        end
        
        -- Create search bar at the top
        local searchBox = Window:CreateSearchBar(homeTab, function(searchText)
            -- Filter script cards based on search text
            local scrollFrame = homeTab:FindFirstChild("ScriptScrollFrame")
            if scrollFrame then
                local visibleCount = 0
                local totalCards = 0
                
                for _, card in pairs(scrollFrame:GetChildren()) do
                    if card:IsA("Frame") and card.Name ~= "UIGridLayout" and card.Name ~= "UIPadding" and card.Name ~= "NoMatchMessage" then
                        totalCards = totalCards + 1
                        -- Enhanced search to check script name, game name, and keywords
                        local scriptNameLabel = card:FindFirstChild("ScriptName")
                        local gameNameLabel = card:FindFirstChild("GameName")
                        local visible = false
                        
                        if searchText == "" then
                            visible = true
                        else
                            local searchLower = searchText:lower()
                            
                            -- Search in script title
                            if scriptNameLabel and scriptNameLabel.Text:lower():find(searchLower) then
                                visible = true
                            end
                            
                            -- Search in game name
                            if gameNameLabel and gameNameLabel.Text:lower():find(searchLower) then
                                visible = true
                            end
                            
                            -- Search in keywords (stored as attributes)
                            local keywords = card:GetAttribute("Keywords") or ""
                            if keywords:lower():find(searchLower) then
                                visible = true
                            end
                            
                            -- Search in description (stored as attributes)
                            local description = card:GetAttribute("Description") or ""
                            if description:lower():find(searchLower) then
                                visible = true
                            end
                        end
                        
                        card.Visible = visible
                        if visible then
                            visibleCount = visibleCount + 1
                        end
                    end
                end
                
                -- Add or remove "no match" message based on search results
                local noMatchMessage = scrollFrame:FindFirstChild("NoMatchMessage")
                if visibleCount == 0 and searchText ~= "" and totalCards > 0 then
                    if not noMatchMessage then
                        noMatchMessage = new("Frame", {
                            Name = "NoMatchMessage",
                            Size = UDim2.new(1, 0, 0, 100),
                            BackgroundTransparency = 1,
                            LayoutOrder = 999
                        })
                        noMatchMessage.Parent = scrollFrame
                        
                        local noMatchIcon = new("TextLabel", {
                            Name = "NoMatchIcon",
                            Position = UDim2.new(0.5, -25, 0, 10),
                            Size = UDim2.new(0, 50, 0, 30),
                            BackgroundTransparency = 1,
                            Text = "🔍",
                            Font = Enum.Font.GothamBold,
                            TextSize = 24,
                            TextColor3 = THEME.TextMuted,
                            TextXAlignment = Enum.TextXAlignment.Center,
                            TextYAlignment = Enum.TextYAlignment.Center
                        })
                        noMatchIcon.Parent = noMatchMessage
                        
                        local noMatchText = new("TextLabel", {
                            Name = "NoMatchText",
                            Position = UDim2.new(0, 0, 0, 45),
                            Size = UDim2.new(1, 0, 0, 40),
                            BackgroundTransparency = 1,
                            Text = "No scripts found matching your search",
                            Font = Enum.Font.Gotham,
                            TextSize = 14,
                            TextColor3 = THEME.TextMuted,
                            TextXAlignment = Enum.TextXAlignment.Center,
                            TextYAlignment = Enum.TextYAlignment.Center,
                            TextWrapped = true
                        })
                        noMatchText.Parent = noMatchMessage
                    end
                    noMatchMessage.Visible = true
                elseif noMatchMessage then
                    noMatchMessage.Visible = false
                end
            end
        end)
        
        -- Create scroll frame for script cards after search bar
        local ScrollFrame = new("ScrollingFrame", {
            Name = "ScriptScrollFrame",
            Position = UDim2.new(0, 0, 0, 50), -- Position below search bar
            Size = UDim2.new(1, 0, 1, -50), -- Fill remaining space
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            ScrollBarThickness = 6,
            ScrollBarImageColor3 = THEME.Primary,
            CanvasSize = UDim2.new(0, 0, 0, 0),
            AutomaticCanvasSize = Enum.AutomaticSize.Y
        })

        ScrollFrame.Parent = homeTab
        
        -- Fixed 2-column layout to display side by side instead of centered
        -- Calculate cell width to fit exactly 2 columns in available space
        wait() -- Wait for frame to render and get proper size

        local actualWidth = ScrollFrame.AbsoluteSize.X > 0 and ScrollFrame.AbsoluteSize.X or 580
        -- Calculate for exactly 2 columns with proper spacing
        -- reduced cell width calculation and minimum width to match smaller cards
        local totalPadding = 30 -- Account for left/right margins and center gap
        local cellWidth = math.floor((actualWidth - totalPadding) / 2)
        cellWidth = math.max(cellWidth, 220) -- Reduced minimum card width to 220px
        
        local GridLayout = new("UIGridLayout", {
            CellSize = UDim2.new(0, cellWidth, 0, 180), -- Reduced height to match card size
            CellPadding = UDim2.new(0, 10, 0, 15),
            HorizontalAlignment = Enum.HorizontalAlignment.Left,
            VerticalAlignment = Enum.VerticalAlignment.Top,
            SortOrder = Enum.SortOrder.LayoutOrder,
            FillDirection = Enum.FillDirection.Horizontal,
            StartCorner = Enum.StartCorner.TopLeft
        })
        GridLayout.Parent = ScrollFrame
        
        -- Add padding to scroll frame
        local Padding = new("UIPadding", {
            PaddingTop = UDim.new(0, 15),
            PaddingBottom = UDim.new(0, 15),
            PaddingLeft = UDim.new(0, 10),
            PaddingRight = UDim.new(0, 10)
        })
        Padding.Parent = ScrollFrame

        -- Get current game's scripts
        local currentPlaceId = getCurrentPlaceId()
        local currentGameData = SCRIPT_DATABASE[currentPlaceId]
        
        local cardIndex = 0
        
        -- Add current game's scripts first (if available)
        if currentGameData then
            for _, script in pairs(currentGameData.scripts) do
                -- Removed position parameter since UIGridLayout handles positioning
                local card = createScriptCard(ScrollFrame, {
                    placeId = currentPlaceId,
                    gameName = currentGameData.gameName
                }, script)
                card.LayoutOrder = cardIndex
                -- Add keywords and description as attributes for enhanced search
                card:SetAttribute("Keywords", script.keywords or "")
                card:SetAttribute("Description", script.description or "")
                cardIndex = cardIndex + 1
            end
        end
        
        -- Add universal scripts
        local universalData = SCRIPT_DATABASE["Universal"]
        if universalData then
            for _, script in pairs(universalData.scripts) do
                -- Removed position parameter since UIGridLayout handles positioning
                local card = createScriptCard(ScrollFrame, {
                    placeId = "Universal",
                    gameName = universalData.gameName
                }, script)
                card.LayoutOrder = cardIndex
                -- Add keywords and description as attributes for enhanced search
                card:SetAttribute("Keywords", script.keywords or "fly noclip speed universal movement")
                card:SetAttribute("Description", script.description or "")
                cardIndex = cardIndex + 1
            end
        end
        
        -- Add other games' scripts
        for placeId, gameData in pairs(SCRIPT_DATABASE) do
            if placeId ~= currentPlaceId and placeId ~= "Universal" then
                for _, script in pairs(gameData.scripts) do
                    -- Removed position parameter since UIGridLayout handles positioning
                    local card = createScriptCard(ScrollFrame, {
                        placeId = placeId,
                        gameName = gameData.gameName
                    }, script)
                    card.LayoutOrder = cardIndex
                    -- Add keywords and description as attributes for enhanced search
                    card:SetAttribute("Keywords", script.keywords or "")
                    card:SetAttribute("Description", script.description or "")
                    cardIndex = cardIndex + 1
                end
            end
        end
    end


    -- Modified Show function to populate home tab by default
    function Window:Show()
        if not Window._shown then
            Window._shown = true
            MainFrame.Visible = true
            
            -- Animate window appearance
            MainFrame.Position = UDim2.new(0.5, 0, 0.4, 0)
            
            MainFrame.Size = UDim2.new(0, 0, 0, 0)
            
            TweenService:Create(MainFrame, THEME.MediumTween, {
                Position = UDim2.new(0.5, -400, 0.5, -300),
                Size = UDim2.new(0, 800, 0, 600)
            }):Play()
            
            -- Only auto-load script cards if user hasn't manually created tabs
            if #Window._tabs == 0 then
                -- Show first tab by default (if any exist)
                if Window._tabs[1] then
                    Window._tabs[1]:Show()
                end
                
                -- Auto-load script cards for home tab
                Window:LoadScriptCards()
            else
                -- User has manually created tabs, show the first one
                if Window._tabs[1] then
                    Window._tabs[1]:Show()
                end
            end
        end
    end

-- Removed duplicate LoadScriptCards function that was only creating Home tab
-- Modified LoadScriptCards to populate all tabs with embedded content
function Window:LoadScriptCards()
    -- Remove existing "Home" tab if it exists
    for i = #Window._tabs, 1, -1 do
        local tab = Window._tabs[i]
        if tab.Name == "Home" then
            tab.Button:Destroy()
            tab.Page:Destroy()
            table.remove(Window._tabs, i)
            break
        end
    end
    
    -- Create Home tab without logo icon and set as first tab
    local homeTab = Window:CreateTab("Home", "", 1)
    populateHomeTab(homeTab.Page)
    
    -- Restored Updates tab creation
    local updatesTab = Window:CreateTab("Updates", "rbxassetid://7733674079", 2)
    populateUpdatesTab(updatesTab.Page)
    
    -- Adjusted Credits tab position back to 3
    local creditsTab = Window:CreateTab("Credits", "rbxassetid://7733955511", 3)
    populateCreditsTab(creditsTab.Page)

    -- Adjusted Settings tab position to 4
    local settingsTab = Window:CreateTab("Settings", "rbxassetid://7733674079", 4)
    populateSettingsTab(settingsTab.Page)

    -- Ensure home tab shows first
    homeTab:Show()
end

    setmetatable(Window, {__index = Lynk})

    -- Show the UI automatically when created
    setVisibility(true)

    return Window
end

return Lynk
