-- Universal Script Hub - Fixed Integration Version
-- This properly integrates with your lynkUI library

-- Load your UI library
local Lynk = loadstring(game:HttpGet("https://raw.githubusercontent.com/vvisuall/lynkUI/refs/heads/main/source"))()

-- Create window first
local Window = Lynk:CreateWindow({
    Name = "Universal Script Hub",
    Title = "LYNK | No.1 Scripthub", 
    Subtitle = "Find any script for any game | Made by @x_vvw on Discord",
    Accent = Color3.fromRGB(88, 101, 242),
    DefaultKeybind = Enum.KeyCode.Insert
})

-- Removed Window:Show() call - let key system control UI display
-- Window:Show() -- This conflicts with key system

-- Store tab creation logic for after key validation
Window._pendingTabCreation = function()
    -- Create tabs manually with your specified icons
    local HomeTab = Window:CreateTab("Home", "rbxassetid://10734950309")
    local UpdatesTab = Window:CreateTab("Updates", "rbxassetid://7733674079")
    local CreditsTab = Window:CreateTab("Credits", "rbxassetid://7733955511") 
    local SettingsTab = Window:CreateTab("Settings", "rbxassetid://10734950020")
    
    print("🎉 LYNK Script Hub loaded successfully!")
    print("📱 Press Insert to toggle the UI")
    print("🔍 All tabs should now load properly with search bar and script cards!")
end

-- Success message for key system
print("🔑 Key system initialized - enter your key to access the script hub!")

-- Show current game info
spawn(function()
    wait(1)
    local currentPlaceId = game.PlaceId
    local success, gameInfo = pcall(function()
        return game:GetService("MarketplaceService"):GetProductInfo(currentPlaceId)
    end)
    
    if success then
        print("🎮 Current Game:", gameInfo.Name)
        print("📝 The UI library will automatically load appropriate scripts after key validation!")
    end
end)
